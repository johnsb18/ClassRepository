
SPI RF Com.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000186  00800100  00000f9a  0000102e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f9a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003f  00800286  00800286  000011b4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001210  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001250  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b85  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c4d  00000000  00000000  00002eed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b87  00000000  00000000  00003b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  000046c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000627  00000000  00000000  00004954  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000097f  00000000  00000000  00004f7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000058fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e9       	ldi	r30, 0x9A	; 154
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 38       	cpi	r26, 0x86	; 134
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a6 e8       	ldi	r26, 0x86	; 134
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a5 3c       	cpi	r26, 0xC5	; 197
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 3f 01 	call	0x27e	; 0x27e <main>
  9e:	0c 94 cb 07 	jmp	0xf96	; 0xf96 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
	}
}

//	Interrupt on IRQ pin
ISR(INT0_vect)
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
	message_received = true;
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	80 93 87 02 	sts	0x0287, r24	; 0x800287 <message_received>
}
  b8:	8f 91       	pop	r24
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <print_config>:

void print_config(void)
{
  c4:	cf 93       	push	r28
  c6:	df 93       	push	r29
  c8:	1f 92       	push	r1
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
  ce:	86 e2       	ldi	r24, 0x26	; 38
  d0:	91 e0       	ldi	r25, 0x01	; 1
  d2:	0e 94 a3 04 	call	0x946	; 0x946 <puts>
	printf("-------------------------------------------\n");
  d6:	84 e5       	ldi	r24, 0x54	; 84
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	0e 94 a3 04 	call	0x946	; 0x946 <puts>
	nrf24_read(CONFIG,&data,1);
  de:	41 e0       	ldi	r20, 0x01	; 1
  e0:	50 e0       	ldi	r21, 0x00	; 0
  e2:	be 01       	movw	r22, r28
  e4:	6f 5f       	subi	r22, 0xFF	; 255
  e6:	7f 4f       	sbci	r23, 0xFF	; 255
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("CONFIG		0x%02X\n",data);
  ee:	89 81       	ldd	r24, Y+1	; 0x01
  f0:	1f 92       	push	r1
  f2:	8f 93       	push	r24
  f4:	80 e8       	ldi	r24, 0x80	; 128
  f6:	91 e0       	ldi	r25, 0x01	; 1
  f8:	9f 93       	push	r25
  fa:	8f 93       	push	r24
  fc:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(EN_AA,&data,1);
 100:	41 e0       	ldi	r20, 0x01	; 1
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	be 01       	movw	r22, r28
 106:	6f 5f       	subi	r22, 0xFF	; 255
 108:	7f 4f       	sbci	r23, 0xFF	; 255
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("EN_AA			0x%02X\n",data);
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	1f 92       	push	r1
 114:	8f 93       	push	r24
 116:	80 e9       	ldi	r24, 0x90	; 144
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	9f 93       	push	r25
 11c:	8f 93       	push	r24
 11e:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(EN_RXADDR,&data,1);
 122:	41 e0       	ldi	r20, 0x01	; 1
 124:	50 e0       	ldi	r21, 0x00	; 0
 126:	be 01       	movw	r22, r28
 128:	6f 5f       	subi	r22, 0xFF	; 255
 12a:	7f 4f       	sbci	r23, 0xFF	; 255
 12c:	82 e0       	ldi	r24, 0x02	; 2
 12e:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("EN_RXADDR		0x%02X\n",data);
 132:	89 81       	ldd	r24, Y+1	; 0x01
 134:	1f 92       	push	r1
 136:	8f 93       	push	r24
 138:	80 ea       	ldi	r24, 0xA0	; 160
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	9f 93       	push	r25
 13e:	8f 93       	push	r24
 140:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(SETUP_RETR,&data,1);
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	50 e0       	ldi	r21, 0x00	; 0
 148:	be 01       	movw	r22, r28
 14a:	6f 5f       	subi	r22, 0xFF	; 255
 14c:	7f 4f       	sbci	r23, 0xFF	; 255
 14e:	84 e0       	ldi	r24, 0x04	; 4
 150:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("SETUP_RETR		0x%02X\n",data);
 154:	89 81       	ldd	r24, Y+1	; 0x01
 156:	1f 92       	push	r1
 158:	8f 93       	push	r24
 15a:	83 eb       	ldi	r24, 0xB3	; 179
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	9f 93       	push	r25
 160:	8f 93       	push	r24
 162:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(RF_CH,&data,1);
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	be 01       	movw	r22, r28
 16c:	6f 5f       	subi	r22, 0xFF	; 255
 16e:	7f 4f       	sbci	r23, 0xFF	; 255
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("RF_CH			0x%02X\n",data);
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	1f 92       	push	r1
 17a:	8f 93       	push	r24
 17c:	87 ec       	ldi	r24, 0xC7	; 199
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	9f 93       	push	r25
 182:	8f 93       	push	r24
 184:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(RF_SETUP,&data,1);
 188:	41 e0       	ldi	r20, 0x01	; 1
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	be 01       	movw	r22, r28
 18e:	6f 5f       	subi	r22, 0xFF	; 255
 190:	7f 4f       	sbci	r23, 0xFF	; 255
 192:	86 e0       	ldi	r24, 0x06	; 6
 194:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("RF_SETUP		0x%02X\n",data);
 198:	89 81       	ldd	r24, Y+1	; 0x01
 19a:	1f 92       	push	r1
 19c:	8f 93       	push	r24
 19e:	87 ed       	ldi	r24, 0xD7	; 215
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(STATUS,&data,1);
 1aa:	41 e0       	ldi	r20, 0x01	; 1
 1ac:	50 e0       	ldi	r21, 0x00	; 0
 1ae:	be 01       	movw	r22, r28
 1b0:	6f 5f       	subi	r22, 0xFF	; 255
 1b2:	7f 4f       	sbci	r23, 0xFF	; 255
 1b4:	87 e0       	ldi	r24, 0x07	; 7
 1b6:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("STATUS		0x%02X\n",data);
 1ba:	89 81       	ldd	r24, Y+1	; 0x01
 1bc:	1f 92       	push	r1
 1be:	8f 93       	push	r24
 1c0:	89 ee       	ldi	r24, 0xE9	; 233
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	9f 93       	push	r25
 1c6:	8f 93       	push	r24
 1c8:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	nrf24_read(FEATURE,&data,1);
 1cc:	41 e0       	ldi	r20, 0x01	; 1
 1ce:	50 e0       	ldi	r21, 0x00	; 0
 1d0:	be 01       	movw	r22, r28
 1d2:	6f 5f       	subi	r22, 0xFF	; 255
 1d4:	7f 4f       	sbci	r23, 0xFF	; 255
 1d6:	8d e1       	ldi	r24, 0x1D	; 29
 1d8:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	printf("FEATURE		0x%02X\n",data);
 1dc:	89 81       	ldd	r24, Y+1	; 0x01
 1de:	1f 92       	push	r1
 1e0:	8f 93       	push	r24
 1e2:	89 ef       	ldi	r24, 0xF9	; 249
 1e4:	91 e0       	ldi	r25, 0x01	; 1
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
	printf("-------------------------------------------\n\n");
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	f8 94       	cli
 1f2:	de bf       	out	0x3e, r29	; 62
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	cd bf       	out	0x3d, r28	; 61
 1f8:	8a e0       	ldi	r24, 0x0A	; 10
 1fa:	92 e0       	ldi	r25, 0x02	; 2
 1fc:	0e 94 a3 04 	call	0x946	; 0x946 <puts>
}
 200:	0f 90       	pop	r0
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <adc_init>:

/* INIT ADC */
void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)|    // Reference Selection Bits
 208:	84 e4       	ldi	r24, 0x44	; 68
 20a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|    // AVcc - external cap at AREF
	(0<<ADLAR)|    // ADC Left Adjust Result
	(1<<MUX2)|     // Analog Channel Selection Bits
	(0<<MUX1)|     // ADC4 (PC4 PIN27)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|    // ADC ENable
 20e:	85 e8       	ldi	r24, 0x85	; 133
 210:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 214:	08 95       	ret

00000216 <read_adc>:
}
/* READ ADC PINS */
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
 216:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <adc_temp+0x1>
 21a:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <adc_temp>
 21e:	24 e0       	ldi	r18, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
 220:	ea e7       	ldi	r30, 0x7A	; 122
 222:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
 224:	a8 e7       	ldi	r26, 0x78	; 120
 226:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
 228:	80 81       	ld	r24, Z
 22a:	80 64       	ori	r24, 0x40	; 64
 22c:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
 22e:	80 81       	ld	r24, Z
 230:	86 fd       	sbrc	r24, 6
 232:	fd cf       	rjmp	.-6      	; 0x22e <read_adc+0x18>
		adc_temp+= ADC;
 234:	4d 91       	ld	r20, X+
 236:	5c 91       	ld	r21, X
 238:	11 97       	sbiw	r26, 0x01	; 1
 23a:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <adc_temp>
 23e:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <adc_temp+0x1>
 242:	84 0f       	add	r24, r20
 244:	95 1f       	adc	r25, r21
 246:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <adc_temp+0x1>
 24a:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24e:	3f ef       	ldi	r19, 0xFF	; 255
 250:	80 e7       	ldi	r24, 0x70	; 112
 252:	92 e0       	ldi	r25, 0x02	; 2
 254:	31 50       	subi	r19, 0x01	; 1
 256:	80 40       	sbci	r24, 0x00	; 0
 258:	90 40       	sbci	r25, 0x00	; 0
 25a:	e1 f7       	brne	.-8      	; 0x254 <read_adc+0x3e>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <read_adc+0x48>
 25e:	00 00       	nop
 260:	21 50       	subi	r18, 0x01	; 1
/* READ ADC PINS */
void read_adc(void)
{
	unsigned char i = 4;
	adc_temp = 0;
	while (i--)
 262:	11 f7       	brne	.-60     	; 0x228 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 4;  // Average a few samples
 264:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <adc_temp>
 268:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <adc_temp+0x1>
 26c:	96 95       	lsr	r25
 26e:	87 95       	ror	r24
 270:	96 95       	lsr	r25
 272:	87 95       	ror	r24
 274:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <adc_temp+0x1>
 278:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <adc_temp>
 27c:	08 95       	ret

0000027e <main>:
//	Used in IRQ ISR
volatile bool message_received = false;
volatile bool status = false;

int main(void)
{
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	a0 97       	sbiw	r28, 0x20	; 32
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61

	char tx_message[32];				// Define string array
	
	//	Initialize UART
	uart_init();
 292:	0e 94 5f 04 	call	0x8be	; 0x8be <uart_init>
	adc_init();
 296:	0e 94 04 01 	call	0x208	; 0x208 <adc_init>
	//	Initialize nRF24L01+ and print configuration info
	nrf24_init();
 29a:	0e 94 0a 02 	call	0x414	; 0x414 <nrf24_init>
	print_config();
 29e:	0e 94 62 00 	call	0xc4	; 0xc4 <print_config>
	
	//	Start listening to incoming messages
	nrf24_start_listening();
 2a2:	0e 94 2f 03 	call	0x65e	; 0x65e <nrf24_start_listening>
	
	while (1)
	{
		read_adc();//read ADC
		adc_temp = (adc_temp*500)/1023 + 20; //conversion of temp
 2a6:	0f 2e       	mov	r0, r31
 2a8:	f4 ef       	ldi	r31, 0xF4	; 244
 2aa:	af 2e       	mov	r10, r31
 2ac:	bb 24       	eor	r11, r11
 2ae:	b3 94       	inc	r11
 2b0:	f0 2d       	mov	r31, r0
 2b2:	0f 2e       	mov	r0, r31
 2b4:	cc 24       	eor	r12, r12
 2b6:	ca 94       	dec	r12
 2b8:	f3 e0       	ldi	r31, 0x03	; 3
 2ba:	df 2e       	mov	r13, r31
 2bc:	f0 2d       	mov	r31, r0
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 2be:	0f 2e       	mov	r0, r31
 2c0:	f7 e3       	ldi	r31, 0x37	; 55
 2c2:	ef 2e       	mov	r14, r31
 2c4:	f2 e0       	ldi	r31, 0x02	; 2
 2c6:	ff 2e       	mov	r15, r31
 2c8:	f0 2d       	mov	r31, r0
 2ca:	08 ea       	ldi	r16, 0xA8	; 168
 2cc:	12 e0       	ldi	r17, 0x02	; 2
		_delay_ms(1500);
		if (message_received)
		{
			//	Message received, print it
			message_received = false;
			printf("Received message: %s\n",nrf24_read_message());
 2ce:	0f 2e       	mov	r0, r31
 2d0:	fd e3       	ldi	r31, 0x3D	; 61
 2d2:	8f 2e       	mov	r8, r31
 2d4:	f2 e0       	ldi	r31, 0x02	; 2
 2d6:	9f 2e       	mov	r9, r31
 2d8:	f0 2d       	mov	r31, r0
	
	while (1)
	{
		read_adc();//read ADC
		adc_temp = (adc_temp*500)/1023 + 20; //conversion of temp
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 2da:	50 2e       	mov	r5, r16
 2dc:	61 2e       	mov	r6, r17
 2de:	0f 2e       	mov	r0, r31
 2e0:	f4 e1       	ldi	r31, 0x14	; 20
 2e2:	7f 2e       	mov	r7, r31
 2e4:	f0 2d       	mov	r31, r0
	//	Start listening to incoming messages
	nrf24_start_listening();
	
	while (1)
	{
		read_adc();//read ADC
 2e6:	0e 94 0b 01 	call	0x216	; 0x216 <read_adc>
		adc_temp = (adc_temp*500)/1023 + 20; //conversion of temp
 2ea:	20 91 bc 02 	lds	r18, 0x02BC	; 0x8002bc <adc_temp>
 2ee:	30 91 bd 02 	lds	r19, 0x02BD	; 0x8002bd <adc_temp+0x1>
 2f2:	2a 9d       	mul	r18, r10
 2f4:	c0 01       	movw	r24, r0
 2f6:	2b 9d       	mul	r18, r11
 2f8:	90 0d       	add	r25, r0
 2fa:	3a 9d       	mul	r19, r10
 2fc:	90 0d       	add	r25, r0
 2fe:	11 24       	eor	r1, r1
 300:	b6 01       	movw	r22, r12
 302:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__udivmodhi4>
 306:	6c 5e       	subi	r22, 0xEC	; 236
 308:	7f 4f       	sbci	r23, 0xFF	; 255
 30a:	70 93 bd 02 	sts	0x02BD, r23	; 0x8002bd <adc_temp+0x1>
 30e:	60 93 bc 02 	sts	0x02BC, r22	; 0x8002bc <adc_temp>
		snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);  // print it
 312:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <adc_temp>
 316:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <adc_temp+0x1>
 31a:	9f 93       	push	r25
 31c:	8f 93       	push	r24
 31e:	ff 92       	push	r15
 320:	ef 92       	push	r14
 322:	1f 92       	push	r1
 324:	7f 92       	push	r7
 326:	1f 93       	push	r17
 328:	0f 93       	push	r16
 32a:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <snprintf>
		strcpy(tx_message,outs);	// Copy string into array
 32e:	65 2d       	mov	r22, r5
 330:	76 2d       	mov	r23, r6
 332:	ce 01       	movw	r24, r28
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	0e 94 86 04 	call	0x90c	; 0x90c <strcpy>
		nrf24_send_message(tx_message);
 33a:	ce 01       	movw	r24, r28
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	0e 94 3a 03 	call	0x674	; 0x674 <nrf24_send_message>
 342:	2f ef       	ldi	r18, 0xFF	; 255
 344:	3d e3       	ldi	r19, 0x3D	; 61
 346:	89 e4       	ldi	r24, 0x49	; 73
 348:	21 50       	subi	r18, 0x01	; 1
 34a:	30 40       	sbci	r19, 0x00	; 0
 34c:	80 40       	sbci	r24, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <main+0xca>
 350:	00 c0       	rjmp	.+0      	; 0x352 <main+0xd4>
 352:	00 00       	nop
		_delay_ms(1500);
		if (message_received)
 354:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <message_received>
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	88 23       	and	r24, r24
 364:	09 f4       	brne	.+2      	; 0x368 <main+0xea>
 366:	bf cf       	rjmp	.-130    	; 0x2e6 <main+0x68>
		{
			//	Message received, print it
			message_received = false;
 368:	10 92 87 02 	sts	0x0287, r1	; 0x800287 <message_received>
			printf("Received message: %s\n",nrf24_read_message());
 36c:	0e 94 f7 03 	call	0x7ee	; 0x7ee <nrf24_read_message>
 370:	9f 93       	push	r25
 372:	8f 93       	push	r24
 374:	9f 92       	push	r9
 376:	8f 92       	push	r8
 378:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
 37c:	3f ef       	ldi	r19, 0xFF	; 255
 37e:	89 e6       	ldi	r24, 0x69	; 105
 380:	98 e1       	ldi	r25, 0x18	; 24
 382:	31 50       	subi	r19, 0x01	; 1
 384:	80 40       	sbci	r24, 0x00	; 0
 386:	90 40       	sbci	r25, 0x00	; 0
 388:	e1 f7       	brne	.-8      	; 0x382 <main+0x104>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x10e>
 38c:	00 00       	nop
			//	Send message as response
			_delay_ms(500);
			status = nrf24_send_message(tx_message);
 38e:	ce 01       	movw	r24, r28
 390:	01 96       	adiw	r24, 0x01	; 1
 392:	0e 94 3a 03 	call	0x674	; 0x674 <nrf24_send_message>
 396:	91 e0       	ldi	r25, 0x01	; 1
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	81 11       	cpse	r24, r1
 3a2:	01 c0       	rjmp	.+2      	; 0x3a6 <main+0x128>
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	90 93 86 02 	sts	0x0286, r25	; 0x800286 <__data_end>
			if (status == true) printf("Message sent successfully\n");
 3aa:	80 91 86 02 	lds	r24, 0x0286	; 0x800286 <__data_end>
 3ae:	88 23       	and	r24, r24
 3b0:	09 f4       	brne	.+2      	; 0x3b4 <main+0x136>
 3b2:	99 cf       	rjmp	.-206    	; 0x2e6 <main+0x68>
 3b4:	83 e5       	ldi	r24, 0x53	; 83
 3b6:	92 e0       	ldi	r25, 0x02	; 2
 3b8:	0e 94 a3 04 	call	0x946	; 0x946 <puts>
 3bc:	90 cf       	rjmp	.-224    	; 0x2de <main+0x60>

000003be <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
 3be:	df 92       	push	r13
 3c0:	ef 92       	push	r14
 3c2:	ff 92       	push	r15
 3c4:	0f 93       	push	r16
 3c6:	1f 93       	push	r17
 3c8:	cf 93       	push	r28
 3ca:	df 93       	push	r29
 3cc:	7b 01       	movw	r14, r22
 3ce:	8a 01       	movw	r16, r20
 3d0:	2a 98       	cbi	0x05, 2	; 5
 3d2:	0e 94 3e 04 	call	0x87c	; 0x87c <spi_exchange>
 3d6:	d8 2e       	mov	r13, r24
 3d8:	01 15       	cp	r16, r1
 3da:	11 05       	cpc	r17, r1
 3dc:	51 f0       	breq	.+20     	; 0x3f2 <nrf24_send_spi+0x34>
 3de:	e7 01       	movw	r28, r14
 3e0:	0e 0d       	add	r16, r14
 3e2:	1f 1d       	adc	r17, r15
 3e4:	88 81       	ld	r24, Y
 3e6:	0e 94 3e 04 	call	0x87c	; 0x87c <spi_exchange>
 3ea:	89 93       	st	Y+, r24
 3ec:	c0 17       	cp	r28, r16
 3ee:	d1 07       	cpc	r29, r17
 3f0:	c9 f7       	brne	.-14     	; 0x3e4 <nrf24_send_spi+0x26>
 3f2:	2a 9a       	sbi	0x05, 2	; 5
 3f4:	8d 2d       	mov	r24, r13
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	1f 91       	pop	r17
 3fc:	0f 91       	pop	r16
 3fe:	ff 90       	pop	r15
 400:	ef 90       	pop	r14
 402:	df 90       	pop	r13
 404:	08 95       	ret

00000406 <nrf24_write>:
 406:	80 62       	ori	r24, 0x20	; 32
 408:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_send_spi>
 40c:	08 95       	ret

0000040e <nrf24_read>:
 40e:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_send_spi>
 412:	08 95       	ret

00000414 <nrf24_init>:
 414:	0f 93       	push	r16
 416:	1f 93       	push	r17
 418:	cf 93       	push	r28
 41a:	df 93       	push	r29
 41c:	1f 92       	push	r1
 41e:	cd b7       	in	r28, 0x3d	; 61
 420:	de b7       	in	r29, 0x3e	; 62
 422:	f8 94       	cli
 424:	e9 e6       	ldi	r30, 0x69	; 105
 426:	f0 e0       	ldi	r31, 0x00	; 0
 428:	80 81       	ld	r24, Z
 42a:	82 60       	ori	r24, 0x02	; 2
 42c:	80 83       	st	Z, r24
 42e:	e8 9a       	sbi	0x1d, 0	; 29
 430:	78 94       	sei
 432:	21 9a       	sbi	0x04, 1	; 4
 434:	22 9a       	sbi	0x04, 2	; 4
 436:	2a 9a       	sbi	0x05, 2	; 5
 438:	29 98       	cbi	0x05, 1	; 5
 43a:	0e 94 2f 04 	call	0x85e	; 0x85e <spi_master_init>
 43e:	2f ef       	ldi	r18, 0xFF	; 255
 440:	81 ee       	ldi	r24, 0xE1	; 225
 442:	94 e0       	ldi	r25, 0x04	; 4
 444:	21 50       	subi	r18, 0x01	; 1
 446:	80 40       	sbci	r24, 0x00	; 0
 448:	90 40       	sbci	r25, 0x00	; 0
 44a:	e1 f7       	brne	.-8      	; 0x444 <nrf24_init+0x30>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <nrf24_init+0x3a>
 44e:	00 00       	nop
 450:	0f e3       	ldi	r16, 0x3F	; 63
 452:	00 93 be 02 	sts	0x02BE, r16	; 0x8002be <data>
 456:	41 e0       	ldi	r20, 0x01	; 1
 458:	50 e0       	ldi	r21, 0x00	; 0
 45a:	6e eb       	ldi	r22, 0xBE	; 190
 45c:	72 e0       	ldi	r23, 0x02	; 2
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 464:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <data>
 468:	41 e0       	ldi	r20, 0x01	; 1
 46a:	50 e0       	ldi	r21, 0x00	; 0
 46c:	6e eb       	ldi	r22, 0xBE	; 190
 46e:	72 e0       	ldi	r23, 0x02	; 2
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 476:	80 ef       	ldi	r24, 0xF0	; 240
 478:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 47c:	41 e0       	ldi	r20, 0x01	; 1
 47e:	50 e0       	ldi	r21, 0x00	; 0
 480:	6e eb       	ldi	r22, 0xBE	; 190
 482:	72 e0       	ldi	r23, 0x02	; 2
 484:	84 e0       	ldi	r24, 0x04	; 4
 486:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 48a:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <data>
 48e:	41 e0       	ldi	r20, 0x01	; 1
 490:	50 e0       	ldi	r21, 0x00	; 0
 492:	6e eb       	ldi	r22, 0xBE	; 190
 494:	72 e0       	ldi	r23, 0x02	; 2
 496:	82 e0       	ldi	r24, 0x02	; 2
 498:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 49c:	84 e7       	ldi	r24, 0x74	; 116
 49e:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 4a2:	41 e0       	ldi	r20, 0x01	; 1
 4a4:	50 e0       	ldi	r21, 0x00	; 0
 4a6:	6e eb       	ldi	r22, 0xBE	; 190
 4a8:	72 e0       	ldi	r23, 0x02	; 2
 4aa:	85 e0       	ldi	r24, 0x05	; 5
 4ac:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 4b0:	8e e0       	ldi	r24, 0x0E	; 14
 4b2:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 4b6:	41 e0       	ldi	r20, 0x01	; 1
 4b8:	50 e0       	ldi	r21, 0x00	; 0
 4ba:	6e eb       	ldi	r22, 0xBE	; 190
 4bc:	72 e0       	ldi	r23, 0x02	; 2
 4be:	86 e0       	ldi	r24, 0x06	; 6
 4c0:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 4c4:	10 e7       	ldi	r17, 0x70	; 112
 4c6:	10 93 be 02 	sts	0x02BE, r17	; 0x8002be <data>
 4ca:	41 e0       	ldi	r20, 0x01	; 1
 4cc:	50 e0       	ldi	r21, 0x00	; 0
 4ce:	6e eb       	ldi	r22, 0xBE	; 190
 4d0:	72 e0       	ldi	r23, 0x02	; 2
 4d2:	87 e0       	ldi	r24, 0x07	; 7
 4d4:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 4d8:	00 93 be 02 	sts	0x02BE, r16	; 0x8002be <data>
 4dc:	41 e0       	ldi	r20, 0x01	; 1
 4de:	50 e0       	ldi	r21, 0x00	; 0
 4e0:	6e eb       	ldi	r22, 0xBE	; 190
 4e2:	72 e0       	ldi	r23, 0x02	; 2
 4e4:	8c e1       	ldi	r24, 0x1C	; 28
 4e6:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 4ea:	84 e0       	ldi	r24, 0x04	; 4
 4ec:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 4f0:	41 e0       	ldi	r20, 0x01	; 1
 4f2:	50 e0       	ldi	r21, 0x00	; 0
 4f4:	6e eb       	ldi	r22, 0xBE	; 190
 4f6:	72 e0       	ldi	r23, 0x02	; 2
 4f8:	8d e1       	ldi	r24, 0x1D	; 29
 4fa:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 4fe:	19 83       	std	Y+1, r17	; 0x01
 500:	40 e0       	ldi	r20, 0x00	; 0
 502:	50 e0       	ldi	r21, 0x00	; 0
 504:	60 e0       	ldi	r22, 0x00	; 0
 506:	70 e0       	ldi	r23, 0x00	; 0
 508:	82 ee       	ldi	r24, 0xE2	; 226
 50a:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 50e:	40 e0       	ldi	r20, 0x00	; 0
 510:	50 e0       	ldi	r21, 0x00	; 0
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	81 ee       	ldi	r24, 0xE1	; 225
 518:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 51c:	45 e0       	ldi	r20, 0x05	; 5
 51e:	50 e0       	ldi	r21, 0x00	; 0
 520:	65 e0       	ldi	r22, 0x05	; 5
 522:	71 e0       	ldi	r23, 0x01	; 1
 524:	8a e0       	ldi	r24, 0x0A	; 10
 526:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 52a:	45 e0       	ldi	r20, 0x05	; 5
 52c:	50 e0       	ldi	r21, 0x00	; 0
 52e:	60 e0       	ldi	r22, 0x00	; 0
 530:	71 e0       	ldi	r23, 0x01	; 1
 532:	80 e1       	ldi	r24, 0x10	; 16
 534:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 538:	41 e0       	ldi	r20, 0x01	; 1
 53a:	50 e0       	ldi	r21, 0x00	; 0
 53c:	be 01       	movw	r22, r28
 53e:	6f 5f       	subi	r22, 0xFF	; 255
 540:	7f 4f       	sbci	r23, 0xFF	; 255
 542:	82 e0       	ldi	r24, 0x02	; 2
 544:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 548:	89 81       	ldd	r24, Y+1	; 0x01
 54a:	81 60       	ori	r24, 0x01	; 1
 54c:	89 83       	std	Y+1, r24	; 0x01
 54e:	41 e0       	ldi	r20, 0x01	; 1
 550:	50 e0       	ldi	r21, 0x00	; 0
 552:	be 01       	movw	r22, r28
 554:	6f 5f       	subi	r22, 0xFF	; 255
 556:	7f 4f       	sbci	r23, 0xFF	; 255
 558:	82 e0       	ldi	r24, 0x02	; 2
 55a:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 55e:	0f 90       	pop	r0
 560:	df 91       	pop	r29
 562:	cf 91       	pop	r28
 564:	1f 91       	pop	r17
 566:	0f 91       	pop	r16
 568:	08 95       	ret

0000056a <nrf24_state>:
 56a:	1f 93       	push	r17
 56c:	cf 93       	push	r28
 56e:	df 93       	push	r29
 570:	1f 92       	push	r1
 572:	cd b7       	in	r28, 0x3d	; 61
 574:	de b7       	in	r29, 0x3e	; 62
 576:	18 2f       	mov	r17, r24
 578:	41 e0       	ldi	r20, 0x01	; 1
 57a:	50 e0       	ldi	r21, 0x00	; 0
 57c:	be 01       	movw	r22, r28
 57e:	6f 5f       	subi	r22, 0xFF	; 255
 580:	7f 4f       	sbci	r23, 0xFF	; 255
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
 588:	13 30       	cpi	r17, 0x03	; 3
 58a:	71 f1       	breq	.+92     	; 0x5e8 <nrf24_state+0x7e>
 58c:	28 f4       	brcc	.+10     	; 0x598 <nrf24_state+0x2e>
 58e:	11 30       	cpi	r17, 0x01	; 1
 590:	59 f0       	breq	.+22     	; 0x5a8 <nrf24_state+0x3e>
 592:	12 30       	cpi	r17, 0x02	; 2
 594:	e9 f0       	breq	.+58     	; 0x5d0 <nrf24_state+0x66>
 596:	5e c0       	rjmp	.+188    	; 0x654 <nrf24_state+0xea>
 598:	15 30       	cpi	r17, 0x05	; 5
 59a:	09 f4       	brne	.+2      	; 0x59e <nrf24_state+0x34>
 59c:	47 c0       	rjmp	.+142    	; 0x62c <nrf24_state+0xc2>
 59e:	d0 f1       	brcs	.+116    	; 0x614 <nrf24_state+0xaa>
 5a0:	16 30       	cpi	r17, 0x06	; 6
 5a2:	09 f4       	brne	.+2      	; 0x5a6 <nrf24_state+0x3c>
 5a4:	45 c0       	rjmp	.+138    	; 0x630 <nrf24_state+0xc6>
 5a6:	56 c0       	rjmp	.+172    	; 0x654 <nrf24_state+0xea>
 5a8:	89 81       	ldd	r24, Y+1	; 0x01
 5aa:	81 fd       	sbrc	r24, 1
 5ac:	53 c0       	rjmp	.+166    	; 0x654 <nrf24_state+0xea>
 5ae:	82 60       	ori	r24, 0x02	; 2
 5b0:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 5b4:	41 e0       	ldi	r20, 0x01	; 1
 5b6:	50 e0       	ldi	r21, 0x00	; 0
 5b8:	6e eb       	ldi	r22, 0xBE	; 190
 5ba:	72 e0       	ldi	r23, 0x02	; 2
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 5c2:	8f e3       	ldi	r24, 0x3F	; 63
 5c4:	9f e1       	ldi	r25, 0x1F	; 31
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	f1 f7       	brne	.-4      	; 0x5c6 <nrf24_state+0x5c>
 5ca:	00 c0       	rjmp	.+0      	; 0x5cc <nrf24_state+0x62>
 5cc:	00 00       	nop
 5ce:	42 c0       	rjmp	.+132    	; 0x654 <nrf24_state+0xea>
 5d0:	89 81       	ldd	r24, Y+1	; 0x01
 5d2:	8d 7f       	andi	r24, 0xFD	; 253
 5d4:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 5d8:	41 e0       	ldi	r20, 0x01	; 1
 5da:	50 e0       	ldi	r21, 0x00	; 0
 5dc:	6e eb       	ldi	r22, 0xBE	; 190
 5de:	72 e0       	ldi	r23, 0x02	; 2
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 5e6:	36 c0       	rjmp	.+108    	; 0x654 <nrf24_state+0xea>
 5e8:	89 81       	ldd	r24, Y+1	; 0x01
 5ea:	81 60       	ori	r24, 0x01	; 1
 5ec:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 5f0:	41 e0       	ldi	r20, 0x01	; 1
 5f2:	50 e0       	ldi	r21, 0x00	; 0
 5f4:	6e eb       	ldi	r22, 0xBE	; 190
 5f6:	72 e0       	ldi	r23, 0x02	; 2
 5f8:	80 e0       	ldi	r24, 0x00	; 0
 5fa:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 5fe:	80 e7       	ldi	r24, 0x70	; 112
 600:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 604:	41 e0       	ldi	r20, 0x01	; 1
 606:	50 e0       	ldi	r21, 0x00	; 0
 608:	6e eb       	ldi	r22, 0xBE	; 190
 60a:	72 e0       	ldi	r23, 0x02	; 2
 60c:	87 e0       	ldi	r24, 0x07	; 7
 60e:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 612:	20 c0       	rjmp	.+64     	; 0x654 <nrf24_state+0xea>
 614:	89 81       	ldd	r24, Y+1	; 0x01
 616:	8e 7f       	andi	r24, 0xFE	; 254
 618:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 61c:	41 e0       	ldi	r20, 0x01	; 1
 61e:	50 e0       	ldi	r21, 0x00	; 0
 620:	6e eb       	ldi	r22, 0xBE	; 190
 622:	72 e0       	ldi	r23, 0x02	; 2
 624:	80 e0       	ldi	r24, 0x00	; 0
 626:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 62a:	14 c0       	rjmp	.+40     	; 0x654 <nrf24_state+0xea>
 62c:	29 98       	cbi	0x05, 1	; 5
 62e:	12 c0       	rjmp	.+36     	; 0x654 <nrf24_state+0xea>
 630:	89 81       	ldd	r24, Y+1	; 0x01
 632:	8e 7f       	andi	r24, 0xFE	; 254
 634:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 638:	41 e0       	ldi	r20, 0x01	; 1
 63a:	50 e0       	ldi	r21, 0x00	; 0
 63c:	6e eb       	ldi	r22, 0xBE	; 190
 63e:	72 e0       	ldi	r23, 0x02	; 2
 640:	80 e0       	ldi	r24, 0x00	; 0
 642:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 646:	29 9a       	sbi	0x05, 1	; 5
 648:	87 e5       	ldi	r24, 0x57	; 87
 64a:	92 e0       	ldi	r25, 0x02	; 2
 64c:	01 97       	sbiw	r24, 0x01	; 1
 64e:	f1 f7       	brne	.-4      	; 0x64c <nrf24_state+0xe2>
 650:	00 c0       	rjmp	.+0      	; 0x652 <nrf24_state+0xe8>
 652:	00 00       	nop
 654:	0f 90       	pop	r0
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	1f 91       	pop	r17
 65c:	08 95       	ret

0000065e <nrf24_start_listening>:
 65e:	83 e0       	ldi	r24, 0x03	; 3
 660:	0e 94 b5 02 	call	0x56a	; 0x56a <nrf24_state>
 664:	29 9a       	sbi	0x05, 1	; 5
 666:	87 e5       	ldi	r24, 0x57	; 87
 668:	92 e0       	ldi	r25, 0x02	; 2
 66a:	01 97       	sbiw	r24, 0x01	; 1
 66c:	f1 f7       	brne	.-4      	; 0x66a <nrf24_start_listening+0xc>
 66e:	00 c0       	rjmp	.+0      	; 0x670 <nrf24_start_listening+0x12>
 670:	00 00       	nop
 672:	08 95       	ret

00000674 <nrf24_send_message>:
 674:	cf 92       	push	r12
 676:	df 92       	push	r13
 678:	ef 92       	push	r14
 67a:	ff 92       	push	r15
 67c:	0f 93       	push	r16
 67e:	1f 93       	push	r17
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	cd b7       	in	r28, 0x3d	; 61
 686:	de b7       	in	r29, 0x3e	; 62
 688:	a0 97       	sbiw	r28, 0x20	; 32
 68a:	0f b6       	in	r0, 0x3f	; 63
 68c:	f8 94       	cli
 68e:	de bf       	out	0x3e, r29	; 62
 690:	0f be       	out	0x3f, r0	; 63
 692:	cd bf       	out	0x3d, r28	; 61
 694:	6c 01       	movw	r12, r24
 696:	68 94       	set
 698:	ff 24       	eor	r15, r15
 69a:	f5 f8       	bld	r15, 5
 69c:	ce 01       	movw	r24, r28
 69e:	01 96       	adiw	r24, 0x01	; 1
 6a0:	fc 01       	movw	r30, r24
 6a2:	2f 2d       	mov	r18, r15
 6a4:	11 92       	st	Z+, r1
 6a6:	2a 95       	dec	r18
 6a8:	e9 f7       	brne	.-6      	; 0x6a4 <nrf24_send_message+0x30>
 6aa:	b6 01       	movw	r22, r12
 6ac:	0e 94 86 04 	call	0x90c	; 0x90c <strcpy>
 6b0:	f6 01       	movw	r30, r12
 6b2:	01 90       	ld	r0, Z+
 6b4:	00 20       	and	r0, r0
 6b6:	e9 f7       	brne	.-6      	; 0x6b2 <nrf24_send_message+0x3e>
 6b8:	31 97       	sbiw	r30, 0x01	; 1
 6ba:	8f 01       	movw	r16, r30
 6bc:	0c 19       	sub	r16, r12
 6be:	1d 09       	sbc	r17, r13
 6c0:	84 e0       	ldi	r24, 0x04	; 4
 6c2:	0e 94 b5 02 	call	0x56a	; 0x56a <nrf24_state>
 6c6:	40 e0       	ldi	r20, 0x00	; 0
 6c8:	50 e0       	ldi	r21, 0x00	; 0
 6ca:	60 e0       	ldi	r22, 0x00	; 0
 6cc:	70 e0       	ldi	r23, 0x00	; 0
 6ce:	82 ee       	ldi	r24, 0xE2	; 226
 6d0:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 6d4:	40 e0       	ldi	r20, 0x00	; 0
 6d6:	50 e0       	ldi	r21, 0x00	; 0
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	81 ee       	ldi	r24, 0xE1	; 225
 6de:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 6e2:	f0 92 be 02 	sts	0x02BE, r15	; 0x8002be <data>
 6e6:	41 e0       	ldi	r20, 0x01	; 1
 6e8:	50 e0       	ldi	r21, 0x00	; 0
 6ea:	6e eb       	ldi	r22, 0xBE	; 190
 6ec:	72 e0       	ldi	r23, 0x02	; 2
 6ee:	87 e0       	ldi	r24, 0x07	; 7
 6f0:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 6f4:	41 e0       	ldi	r20, 0x01	; 1
 6f6:	50 e0       	ldi	r21, 0x00	; 0
 6f8:	6e eb       	ldi	r22, 0xBE	; 190
 6fa:	72 e0       	ldi	r23, 0x02	; 2
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
 702:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <data>
 706:	80 64       	ori	r24, 0x40	; 64
 708:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 70c:	41 e0       	ldi	r20, 0x01	; 1
 70e:	50 e0       	ldi	r21, 0x00	; 0
 710:	6e eb       	ldi	r22, 0xBE	; 190
 712:	72 e0       	ldi	r23, 0x02	; 2
 714:	80 e0       	ldi	r24, 0x00	; 0
 716:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 71a:	2a 98       	cbi	0x05, 2	; 5
 71c:	80 eb       	ldi	r24, 0xB0	; 176
 71e:	0e 94 39 04 	call	0x872	; 0x872 <spi_send>
 722:	ef ef       	ldi	r30, 0xFF	; 255
 724:	e0 0f       	add	r30, r16
 726:	00 23       	and	r16, r16
 728:	81 f0       	breq	.+32     	; 0x74a <nrf24_send_message+0xd6>
 72a:	86 01       	movw	r16, r12
 72c:	ee 2e       	mov	r14, r30
 72e:	f1 2c       	mov	r15, r1
 730:	f7 01       	movw	r30, r14
 732:	31 96       	adiw	r30, 0x01	; 1
 734:	76 01       	movw	r14, r12
 736:	ee 0e       	add	r14, r30
 738:	ff 1e       	adc	r15, r31
 73a:	f8 01       	movw	r30, r16
 73c:	81 91       	ld	r24, Z+
 73e:	8f 01       	movw	r16, r30
 740:	0e 94 39 04 	call	0x872	; 0x872 <spi_send>
 744:	0e 15       	cp	r16, r14
 746:	1f 05       	cpc	r17, r15
 748:	c1 f7       	brne	.-16     	; 0x73a <nrf24_send_message+0xc6>
 74a:	80 e0       	ldi	r24, 0x00	; 0
 74c:	0e 94 39 04 	call	0x872	; 0x872 <spi_send>
 750:	2a 9a       	sbi	0x05, 2	; 5
 752:	29 9a       	sbi	0x05, 1	; 5
 754:	f0 e5       	ldi	r31, 0x50	; 80
 756:	fa 95       	dec	r31
 758:	f1 f7       	brne	.-4      	; 0x756 <nrf24_send_message+0xe2>
 75a:	29 98       	cbi	0x05, 1	; 5
 75c:	41 e0       	ldi	r20, 0x01	; 1
 75e:	50 e0       	ldi	r21, 0x00	; 0
 760:	6e eb       	ldi	r22, 0xBE	; 190
 762:	72 e0       	ldi	r23, 0x02	; 2
 764:	87 e0       	ldi	r24, 0x07	; 7
 766:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
 76a:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <data>
 76e:	85 fd       	sbrc	r24, 5
 770:	0b c0       	rjmp	.+22     	; 0x788 <nrf24_send_message+0x114>
 772:	41 e0       	ldi	r20, 0x01	; 1
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	6e eb       	ldi	r22, 0xBE	; 190
 778:	72 e0       	ldi	r23, 0x02	; 2
 77a:	87 e0       	ldi	r24, 0x07	; 7
 77c:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
 780:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <data>
 784:	85 ff       	sbrs	r24, 5
 786:	f5 cf       	rjmp	.-22     	; 0x772 <nrf24_send_message+0xfe>
 788:	ce 01       	movw	r24, r28
 78a:	01 96       	adiw	r24, 0x01	; 1
 78c:	9f 93       	push	r25
 78e:	8f 93       	push	r24
 790:	8d e6       	ldi	r24, 0x6D	; 109
 792:	92 e0       	ldi	r25, 0x02	; 2
 794:	9f 93       	push	r25
 796:	8f 93       	push	r24
 798:	0e 94 8d 04 	call	0x91a	; 0x91a <printf>
 79c:	41 e0       	ldi	r20, 0x01	; 1
 79e:	50 e0       	ldi	r21, 0x00	; 0
 7a0:	6e eb       	ldi	r22, 0xBE	; 190
 7a2:	72 e0       	ldi	r23, 0x02	; 2
 7a4:	80 e0       	ldi	r24, 0x00	; 0
 7a6:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
 7aa:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <data>
 7ae:	8f 7b       	andi	r24, 0xBF	; 191
 7b0:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
 7b4:	41 e0       	ldi	r20, 0x01	; 1
 7b6:	50 e0       	ldi	r21, 0x00	; 0
 7b8:	6e eb       	ldi	r22, 0xBE	; 190
 7ba:	72 e0       	ldi	r23, 0x02	; 2
 7bc:	80 e0       	ldi	r24, 0x00	; 0
 7be:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
 7c2:	0e 94 2f 03 	call	0x65e	; 0x65e <nrf24_start_listening>
 7c6:	0f 90       	pop	r0
 7c8:	0f 90       	pop	r0
 7ca:	0f 90       	pop	r0
 7cc:	0f 90       	pop	r0
 7ce:	81 e0       	ldi	r24, 0x01	; 1
 7d0:	a0 96       	adiw	r28, 0x20	; 32
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	de bf       	out	0x3e, r29	; 62
 7d8:	0f be       	out	0x3f, r0	; 63
 7da:	cd bf       	out	0x3d, r28	; 61
 7dc:	df 91       	pop	r29
 7de:	cf 91       	pop	r28
 7e0:	1f 91       	pop	r17
 7e2:	0f 91       	pop	r16
 7e4:	ff 90       	pop	r15
 7e6:	ef 90       	pop	r14
 7e8:	df 90       	pop	r13
 7ea:	cf 90       	pop	r12
 7ec:	08 95       	ret

000007ee <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 7ee:	80 e2       	ldi	r24, 0x20	; 32
 7f0:	e8 e8       	ldi	r30, 0x88	; 136
 7f2:	f2 e0       	ldi	r31, 0x02	; 2
 7f4:	df 01       	movw	r26, r30
 7f6:	1d 92       	st	X+, r1
 7f8:	8a 95       	dec	r24
 7fa:	e9 f7       	brne	.-6      	; 0x7f6 <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 7fc:	41 e0       	ldi	r20, 0x01	; 1
 7fe:	50 e0       	ldi	r21, 0x00	; 0
 800:	6e eb       	ldi	r22, 0xBE	; 190
 802:	72 e0       	ldi	r23, 0x02	; 2
 804:	80 e6       	ldi	r24, 0x60	; 96
 806:	0e 94 07 02 	call	0x40e	; 0x40e <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 80a:	40 91 be 02 	lds	r20, 0x02BE	; 0x8002be <data>
 80e:	44 23       	and	r20, r20
 810:	41 f0       	breq	.+16     	; 0x822 <nrf24_read_message+0x34>
 812:	50 e0       	ldi	r21, 0x00	; 0
 814:	4f 5f       	subi	r20, 0xFF	; 255
 816:	5f 4f       	sbci	r21, 0xFF	; 255
 818:	68 e8       	ldi	r22, 0x88	; 136
 81a:	72 e0       	ldi	r23, 0x02	; 2
 81c:	81 e6       	ldi	r24, 0x61	; 97
 81e:	0e 94 df 01 	call	0x3be	; 0x3be <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 822:	80 91 88 02 	lds	r24, 0x0288	; 0x800288 <rx_message.2167>
 826:	88 23       	and	r24, r24
 828:	69 f0       	breq	.+26     	; 0x844 <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 82a:	80 e4       	ldi	r24, 0x40	; 64
 82c:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
		nrf24_write(STATUS,&data,1);
 830:	41 e0       	ldi	r20, 0x01	; 1
 832:	50 e0       	ldi	r21, 0x00	; 0
 834:	6e eb       	ldi	r22, 0xBE	; 190
 836:	72 e0       	ldi	r23, 0x02	; 2
 838:	87 e0       	ldi	r24, 0x07	; 7
 83a:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
		
		return rx_message;
 83e:	88 e8       	ldi	r24, 0x88	; 136
 840:	92 e0       	ldi	r25, 0x02	; 2
 842:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 844:	80 e4       	ldi	r24, 0x40	; 64
 846:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <data>
	nrf24_write(STATUS,&data,1);
 84a:	41 e0       	ldi	r20, 0x01	; 1
 84c:	50 e0       	ldi	r21, 0x00	; 0
 84e:	6e eb       	ldi	r22, 0xBE	; 190
 850:	72 e0       	ldi	r23, 0x02	; 2
 852:	87 e0       	ldi	r24, 0x07	; 7
 854:	0e 94 03 02 	call	0x406	; 0x406 <nrf24_write>
	
	return "failed";
 858:	8f e7       	ldi	r24, 0x7F	; 127
 85a:	92 e0       	ldi	r25, 0x02	; 2
}
 85c:	08 95       	ret

0000085e <spi_master_init>:
	loop_until_bit_is_set(SPSR, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
 85e:	24 98       	cbi	0x04, 4	; 4
 860:	84 b1       	in	r24, 0x04	; 4
 862:	88 62       	ori	r24, 0x28	; 40
 864:	84 b9       	out	0x04, r24	; 4
 866:	80 e5       	ldi	r24, 0x50	; 80
 868:	8c bd       	out	0x2c, r24	; 44
 86a:	8d b5       	in	r24, 0x2d	; 45
 86c:	81 60       	ori	r24, 0x01	; 1
 86e:	8d bd       	out	0x2d, r24	; 45
 870:	08 95       	ret

00000872 <spi_send>:
 872:	8e bd       	out	0x2e, r24	; 46
 874:	0d b4       	in	r0, 0x2d	; 45
 876:	07 fe       	sbrs	r0, 7
 878:	fd cf       	rjmp	.-6      	; 0x874 <spi_send+0x2>
 87a:	08 95       	ret

0000087c <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR = send_data;
 87c:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
 87e:	0d b4       	in	r0, 0x2d	; 45
 880:	07 fe       	sbrs	r0, 7
 882:	fd cf       	rjmp	.-6      	; 0x87e <spi_exchange+0x2>
	return SPDR;
 884:	8e b5       	in	r24, 0x2e	; 46
}
 886:	08 95       	ret

00000888 <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
 888:	cf 93       	push	r28
 88a:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 88c:	8a 30       	cpi	r24, 0x0A	; 10
 88e:	19 f4       	brne	.+6      	; 0x896 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 890:	8d e0       	ldi	r24, 0x0D	; 13
 892:	0e 94 44 04 	call	0x888	; 0x888 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 896:	e0 ec       	ldi	r30, 0xC0	; 192
 898:	f0 e0       	ldi	r31, 0x00	; 0
 89a:	80 81       	ld	r24, Z
 89c:	85 ff       	sbrs	r24, 5
 89e:	fd cf       	rjmp	.-6      	; 0x89a <uart_putchar+0x12>
	UDR0 = c;
 8a0:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 8a4:	80 e0       	ldi	r24, 0x00	; 0
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	cf 91       	pop	r28
 8aa:	08 95       	ret

000008ac <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 8ac:	e0 ec       	ldi	r30, 0xC0	; 192
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	80 81       	ld	r24, Z
 8b2:	88 23       	and	r24, r24
 8b4:	ec f7       	brge	.-6      	; 0x8b0 <uart_getchar+0x4>
	return UDR0;
 8b6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	08 95       	ret

000008be <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
 8be:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = MYUBRR;
 8c2:	87 e6       	ldi	r24, 0x67	; 103
 8c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 8c8:	88 e1       	ldi	r24, 0x18	; 24
 8ca:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    
    stdout = &mystdout;
 8ce:	ef eb       	ldi	r30, 0xBF	; 191
 8d0:	f2 e0       	ldi	r31, 0x02	; 2
 8d2:	88 e1       	ldi	r24, 0x18	; 24
 8d4:	91 e0       	ldi	r25, 0x01	; 1
 8d6:	93 83       	std	Z+3, r25	; 0x03
 8d8:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
 8da:	8a e0       	ldi	r24, 0x0A	; 10
 8dc:	91 e0       	ldi	r25, 0x01	; 1
 8de:	91 83       	std	Z+1, r25	; 0x01
 8e0:	80 83       	st	Z, r24
 8e2:	08 95       	ret

000008e4 <__udivmodhi4>:
 8e4:	aa 1b       	sub	r26, r26
 8e6:	bb 1b       	sub	r27, r27
 8e8:	51 e1       	ldi	r21, 0x11	; 17
 8ea:	07 c0       	rjmp	.+14     	; 0x8fa <__udivmodhi4_ep>

000008ec <__udivmodhi4_loop>:
 8ec:	aa 1f       	adc	r26, r26
 8ee:	bb 1f       	adc	r27, r27
 8f0:	a6 17       	cp	r26, r22
 8f2:	b7 07       	cpc	r27, r23
 8f4:	10 f0       	brcs	.+4      	; 0x8fa <__udivmodhi4_ep>
 8f6:	a6 1b       	sub	r26, r22
 8f8:	b7 0b       	sbc	r27, r23

000008fa <__udivmodhi4_ep>:
 8fa:	88 1f       	adc	r24, r24
 8fc:	99 1f       	adc	r25, r25
 8fe:	5a 95       	dec	r21
 900:	a9 f7       	brne	.-22     	; 0x8ec <__udivmodhi4_loop>
 902:	80 95       	com	r24
 904:	90 95       	com	r25
 906:	bc 01       	movw	r22, r24
 908:	cd 01       	movw	r24, r26
 90a:	08 95       	ret

0000090c <strcpy>:
 90c:	fb 01       	movw	r30, r22
 90e:	dc 01       	movw	r26, r24
 910:	01 90       	ld	r0, Z+
 912:	0d 92       	st	X+, r0
 914:	00 20       	and	r0, r0
 916:	e1 f7       	brne	.-8      	; 0x910 <strcpy+0x4>
 918:	08 95       	ret

0000091a <printf>:
 91a:	a0 e0       	ldi	r26, 0x00	; 0
 91c:	b0 e0       	ldi	r27, 0x00	; 0
 91e:	e3 e9       	ldi	r30, 0x93	; 147
 920:	f4 e0       	ldi	r31, 0x04	; 4
 922:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__prologue_saves__+0x20>
 926:	ae 01       	movw	r20, r28
 928:	4b 5f       	subi	r20, 0xFB	; 251
 92a:	5f 4f       	sbci	r21, 0xFF	; 255
 92c:	fa 01       	movw	r30, r20
 92e:	61 91       	ld	r22, Z+
 930:	71 91       	ld	r23, Z+
 932:	af 01       	movw	r20, r30
 934:	80 91 c1 02 	lds	r24, 0x02C1	; 0x8002c1 <__iob+0x2>
 938:	90 91 c2 02 	lds	r25, 0x02C2	; 0x8002c2 <__iob+0x3>
 93c:	0e 94 03 05 	call	0xa06	; 0xa06 <vfprintf>
 940:	e2 e0       	ldi	r30, 0x02	; 2
 942:	0c 94 c0 07 	jmp	0xf80	; 0xf80 <__epilogue_restores__+0x20>

00000946 <puts>:
 946:	0f 93       	push	r16
 948:	1f 93       	push	r17
 94a:	cf 93       	push	r28
 94c:	df 93       	push	r29
 94e:	e0 91 c1 02 	lds	r30, 0x02C1	; 0x8002c1 <__iob+0x2>
 952:	f0 91 c2 02 	lds	r31, 0x02C2	; 0x8002c2 <__iob+0x3>
 956:	23 81       	ldd	r18, Z+3	; 0x03
 958:	21 ff       	sbrs	r18, 1
 95a:	1b c0       	rjmp	.+54     	; 0x992 <puts+0x4c>
 95c:	8c 01       	movw	r16, r24
 95e:	d0 e0       	ldi	r29, 0x00	; 0
 960:	c0 e0       	ldi	r28, 0x00	; 0
 962:	f8 01       	movw	r30, r16
 964:	81 91       	ld	r24, Z+
 966:	8f 01       	movw	r16, r30
 968:	60 91 c1 02 	lds	r22, 0x02C1	; 0x8002c1 <__iob+0x2>
 96c:	70 91 c2 02 	lds	r23, 0x02C2	; 0x8002c2 <__iob+0x3>
 970:	db 01       	movw	r26, r22
 972:	18 96       	adiw	r26, 0x08	; 8
 974:	ed 91       	ld	r30, X+
 976:	fc 91       	ld	r31, X
 978:	19 97       	sbiw	r26, 0x09	; 9
 97a:	88 23       	and	r24, r24
 97c:	31 f0       	breq	.+12     	; 0x98a <puts+0x44>
 97e:	09 95       	icall
 980:	89 2b       	or	r24, r25
 982:	79 f3       	breq	.-34     	; 0x962 <puts+0x1c>
 984:	df ef       	ldi	r29, 0xFF	; 255
 986:	cf ef       	ldi	r28, 0xFF	; 255
 988:	ec cf       	rjmp	.-40     	; 0x962 <puts+0x1c>
 98a:	8a e0       	ldi	r24, 0x0A	; 10
 98c:	09 95       	icall
 98e:	89 2b       	or	r24, r25
 990:	19 f0       	breq	.+6      	; 0x998 <puts+0x52>
 992:	8f ef       	ldi	r24, 0xFF	; 255
 994:	9f ef       	ldi	r25, 0xFF	; 255
 996:	02 c0       	rjmp	.+4      	; 0x99c <puts+0x56>
 998:	8d 2f       	mov	r24, r29
 99a:	9c 2f       	mov	r25, r28
 99c:	df 91       	pop	r29
 99e:	cf 91       	pop	r28
 9a0:	1f 91       	pop	r17
 9a2:	0f 91       	pop	r16
 9a4:	08 95       	ret

000009a6 <snprintf>:
 9a6:	ae e0       	ldi	r26, 0x0E	; 14
 9a8:	b0 e0       	ldi	r27, 0x00	; 0
 9aa:	e9 ed       	ldi	r30, 0xD9	; 217
 9ac:	f4 e0       	ldi	r31, 0x04	; 4
 9ae:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__prologue_saves__+0x1c>
 9b2:	0d 89       	ldd	r16, Y+21	; 0x15
 9b4:	1e 89       	ldd	r17, Y+22	; 0x16
 9b6:	8f 89       	ldd	r24, Y+23	; 0x17
 9b8:	98 8d       	ldd	r25, Y+24	; 0x18
 9ba:	26 e0       	ldi	r18, 0x06	; 6
 9bc:	2c 83       	std	Y+4, r18	; 0x04
 9be:	1a 83       	std	Y+2, r17	; 0x02
 9c0:	09 83       	std	Y+1, r16	; 0x01
 9c2:	97 ff       	sbrs	r25, 7
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <snprintf+0x24>
 9c6:	80 e0       	ldi	r24, 0x00	; 0
 9c8:	90 e8       	ldi	r25, 0x80	; 128
 9ca:	01 97       	sbiw	r24, 0x01	; 1
 9cc:	9e 83       	std	Y+6, r25	; 0x06
 9ce:	8d 83       	std	Y+5, r24	; 0x05
 9d0:	ae 01       	movw	r20, r28
 9d2:	45 5e       	subi	r20, 0xE5	; 229
 9d4:	5f 4f       	sbci	r21, 0xFF	; 255
 9d6:	69 8d       	ldd	r22, Y+25	; 0x19
 9d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
 9da:	ce 01       	movw	r24, r28
 9dc:	01 96       	adiw	r24, 0x01	; 1
 9de:	0e 94 03 05 	call	0xa06	; 0xa06 <vfprintf>
 9e2:	4d 81       	ldd	r20, Y+5	; 0x05
 9e4:	5e 81       	ldd	r21, Y+6	; 0x06
 9e6:	57 fd       	sbrc	r21, 7
 9e8:	0a c0       	rjmp	.+20     	; 0x9fe <snprintf+0x58>
 9ea:	2f 81       	ldd	r18, Y+7	; 0x07
 9ec:	38 85       	ldd	r19, Y+8	; 0x08
 9ee:	42 17       	cp	r20, r18
 9f0:	53 07       	cpc	r21, r19
 9f2:	0c f4       	brge	.+2      	; 0x9f6 <snprintf+0x50>
 9f4:	9a 01       	movw	r18, r20
 9f6:	f8 01       	movw	r30, r16
 9f8:	e2 0f       	add	r30, r18
 9fa:	f3 1f       	adc	r31, r19
 9fc:	10 82       	st	Z, r1
 9fe:	2e 96       	adiw	r28, 0x0e	; 14
 a00:	e4 e0       	ldi	r30, 0x04	; 4
 a02:	0c 94 be 07 	jmp	0xf7c	; 0xf7c <__epilogue_restores__+0x1c>

00000a06 <vfprintf>:
 a06:	ab e0       	ldi	r26, 0x0B	; 11
 a08:	b0 e0       	ldi	r27, 0x00	; 0
 a0a:	e9 e0       	ldi	r30, 0x09	; 9
 a0c:	f5 e0       	ldi	r31, 0x05	; 5
 a0e:	0c 94 94 07 	jmp	0xf28	; 0xf28 <__prologue_saves__>
 a12:	6c 01       	movw	r12, r24
 a14:	7b 01       	movw	r14, r22
 a16:	8a 01       	movw	r16, r20
 a18:	fc 01       	movw	r30, r24
 a1a:	17 82       	std	Z+7, r1	; 0x07
 a1c:	16 82       	std	Z+6, r1	; 0x06
 a1e:	83 81       	ldd	r24, Z+3	; 0x03
 a20:	81 ff       	sbrs	r24, 1
 a22:	cc c1       	rjmp	.+920    	; 0xdbc <vfprintf+0x3b6>
 a24:	ce 01       	movw	r24, r28
 a26:	01 96       	adiw	r24, 0x01	; 1
 a28:	3c 01       	movw	r6, r24
 a2a:	f6 01       	movw	r30, r12
 a2c:	93 81       	ldd	r25, Z+3	; 0x03
 a2e:	f7 01       	movw	r30, r14
 a30:	93 fd       	sbrc	r25, 3
 a32:	85 91       	lpm	r24, Z+
 a34:	93 ff       	sbrs	r25, 3
 a36:	81 91       	ld	r24, Z+
 a38:	7f 01       	movw	r14, r30
 a3a:	88 23       	and	r24, r24
 a3c:	09 f4       	brne	.+2      	; 0xa40 <vfprintf+0x3a>
 a3e:	ba c1       	rjmp	.+884    	; 0xdb4 <vfprintf+0x3ae>
 a40:	85 32       	cpi	r24, 0x25	; 37
 a42:	39 f4       	brne	.+14     	; 0xa52 <vfprintf+0x4c>
 a44:	93 fd       	sbrc	r25, 3
 a46:	85 91       	lpm	r24, Z+
 a48:	93 ff       	sbrs	r25, 3
 a4a:	81 91       	ld	r24, Z+
 a4c:	7f 01       	movw	r14, r30
 a4e:	85 32       	cpi	r24, 0x25	; 37
 a50:	29 f4       	brne	.+10     	; 0xa5c <vfprintf+0x56>
 a52:	b6 01       	movw	r22, r12
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 a5a:	e7 cf       	rjmp	.-50     	; 0xa2a <vfprintf+0x24>
 a5c:	91 2c       	mov	r9, r1
 a5e:	21 2c       	mov	r2, r1
 a60:	31 2c       	mov	r3, r1
 a62:	ff e1       	ldi	r31, 0x1F	; 31
 a64:	f3 15       	cp	r31, r3
 a66:	d8 f0       	brcs	.+54     	; 0xa9e <vfprintf+0x98>
 a68:	8b 32       	cpi	r24, 0x2B	; 43
 a6a:	79 f0       	breq	.+30     	; 0xa8a <vfprintf+0x84>
 a6c:	38 f4       	brcc	.+14     	; 0xa7c <vfprintf+0x76>
 a6e:	80 32       	cpi	r24, 0x20	; 32
 a70:	79 f0       	breq	.+30     	; 0xa90 <vfprintf+0x8a>
 a72:	83 32       	cpi	r24, 0x23	; 35
 a74:	a1 f4       	brne	.+40     	; 0xa9e <vfprintf+0x98>
 a76:	23 2d       	mov	r18, r3
 a78:	20 61       	ori	r18, 0x10	; 16
 a7a:	1d c0       	rjmp	.+58     	; 0xab6 <vfprintf+0xb0>
 a7c:	8d 32       	cpi	r24, 0x2D	; 45
 a7e:	61 f0       	breq	.+24     	; 0xa98 <vfprintf+0x92>
 a80:	80 33       	cpi	r24, 0x30	; 48
 a82:	69 f4       	brne	.+26     	; 0xa9e <vfprintf+0x98>
 a84:	23 2d       	mov	r18, r3
 a86:	21 60       	ori	r18, 0x01	; 1
 a88:	16 c0       	rjmp	.+44     	; 0xab6 <vfprintf+0xb0>
 a8a:	83 2d       	mov	r24, r3
 a8c:	82 60       	ori	r24, 0x02	; 2
 a8e:	38 2e       	mov	r3, r24
 a90:	e3 2d       	mov	r30, r3
 a92:	e4 60       	ori	r30, 0x04	; 4
 a94:	3e 2e       	mov	r3, r30
 a96:	2a c0       	rjmp	.+84     	; 0xaec <vfprintf+0xe6>
 a98:	f3 2d       	mov	r31, r3
 a9a:	f8 60       	ori	r31, 0x08	; 8
 a9c:	1d c0       	rjmp	.+58     	; 0xad8 <vfprintf+0xd2>
 a9e:	37 fc       	sbrc	r3, 7
 aa0:	2d c0       	rjmp	.+90     	; 0xafc <vfprintf+0xf6>
 aa2:	20 ed       	ldi	r18, 0xD0	; 208
 aa4:	28 0f       	add	r18, r24
 aa6:	2a 30       	cpi	r18, 0x0A	; 10
 aa8:	40 f0       	brcs	.+16     	; 0xaba <vfprintf+0xb4>
 aaa:	8e 32       	cpi	r24, 0x2E	; 46
 aac:	b9 f4       	brne	.+46     	; 0xadc <vfprintf+0xd6>
 aae:	36 fc       	sbrc	r3, 6
 ab0:	81 c1       	rjmp	.+770    	; 0xdb4 <vfprintf+0x3ae>
 ab2:	23 2d       	mov	r18, r3
 ab4:	20 64       	ori	r18, 0x40	; 64
 ab6:	32 2e       	mov	r3, r18
 ab8:	19 c0       	rjmp	.+50     	; 0xaec <vfprintf+0xe6>
 aba:	36 fe       	sbrs	r3, 6
 abc:	06 c0       	rjmp	.+12     	; 0xaca <vfprintf+0xc4>
 abe:	8a e0       	ldi	r24, 0x0A	; 10
 ac0:	98 9e       	mul	r9, r24
 ac2:	20 0d       	add	r18, r0
 ac4:	11 24       	eor	r1, r1
 ac6:	92 2e       	mov	r9, r18
 ac8:	11 c0       	rjmp	.+34     	; 0xaec <vfprintf+0xe6>
 aca:	ea e0       	ldi	r30, 0x0A	; 10
 acc:	2e 9e       	mul	r2, r30
 ace:	20 0d       	add	r18, r0
 ad0:	11 24       	eor	r1, r1
 ad2:	22 2e       	mov	r2, r18
 ad4:	f3 2d       	mov	r31, r3
 ad6:	f0 62       	ori	r31, 0x20	; 32
 ad8:	3f 2e       	mov	r3, r31
 ada:	08 c0       	rjmp	.+16     	; 0xaec <vfprintf+0xe6>
 adc:	8c 36       	cpi	r24, 0x6C	; 108
 ade:	21 f4       	brne	.+8      	; 0xae8 <vfprintf+0xe2>
 ae0:	83 2d       	mov	r24, r3
 ae2:	80 68       	ori	r24, 0x80	; 128
 ae4:	38 2e       	mov	r3, r24
 ae6:	02 c0       	rjmp	.+4      	; 0xaec <vfprintf+0xe6>
 ae8:	88 36       	cpi	r24, 0x68	; 104
 aea:	41 f4       	brne	.+16     	; 0xafc <vfprintf+0xf6>
 aec:	f7 01       	movw	r30, r14
 aee:	93 fd       	sbrc	r25, 3
 af0:	85 91       	lpm	r24, Z+
 af2:	93 ff       	sbrs	r25, 3
 af4:	81 91       	ld	r24, Z+
 af6:	7f 01       	movw	r14, r30
 af8:	81 11       	cpse	r24, r1
 afa:	b3 cf       	rjmp	.-154    	; 0xa62 <vfprintf+0x5c>
 afc:	98 2f       	mov	r25, r24
 afe:	9f 7d       	andi	r25, 0xDF	; 223
 b00:	95 54       	subi	r25, 0x45	; 69
 b02:	93 30       	cpi	r25, 0x03	; 3
 b04:	28 f4       	brcc	.+10     	; 0xb10 <vfprintf+0x10a>
 b06:	0c 5f       	subi	r16, 0xFC	; 252
 b08:	1f 4f       	sbci	r17, 0xFF	; 255
 b0a:	9f e3       	ldi	r25, 0x3F	; 63
 b0c:	99 83       	std	Y+1, r25	; 0x01
 b0e:	0d c0       	rjmp	.+26     	; 0xb2a <vfprintf+0x124>
 b10:	83 36       	cpi	r24, 0x63	; 99
 b12:	31 f0       	breq	.+12     	; 0xb20 <vfprintf+0x11a>
 b14:	83 37       	cpi	r24, 0x73	; 115
 b16:	71 f0       	breq	.+28     	; 0xb34 <vfprintf+0x12e>
 b18:	83 35       	cpi	r24, 0x53	; 83
 b1a:	09 f0       	breq	.+2      	; 0xb1e <vfprintf+0x118>
 b1c:	59 c0       	rjmp	.+178    	; 0xbd0 <vfprintf+0x1ca>
 b1e:	21 c0       	rjmp	.+66     	; 0xb62 <vfprintf+0x15c>
 b20:	f8 01       	movw	r30, r16
 b22:	80 81       	ld	r24, Z
 b24:	89 83       	std	Y+1, r24	; 0x01
 b26:	0e 5f       	subi	r16, 0xFE	; 254
 b28:	1f 4f       	sbci	r17, 0xFF	; 255
 b2a:	88 24       	eor	r8, r8
 b2c:	83 94       	inc	r8
 b2e:	91 2c       	mov	r9, r1
 b30:	53 01       	movw	r10, r6
 b32:	13 c0       	rjmp	.+38     	; 0xb5a <vfprintf+0x154>
 b34:	28 01       	movw	r4, r16
 b36:	f2 e0       	ldi	r31, 0x02	; 2
 b38:	4f 0e       	add	r4, r31
 b3a:	51 1c       	adc	r5, r1
 b3c:	f8 01       	movw	r30, r16
 b3e:	a0 80       	ld	r10, Z
 b40:	b1 80       	ldd	r11, Z+1	; 0x01
 b42:	36 fe       	sbrs	r3, 6
 b44:	03 c0       	rjmp	.+6      	; 0xb4c <vfprintf+0x146>
 b46:	69 2d       	mov	r22, r9
 b48:	70 e0       	ldi	r23, 0x00	; 0
 b4a:	02 c0       	rjmp	.+4      	; 0xb50 <vfprintf+0x14a>
 b4c:	6f ef       	ldi	r22, 0xFF	; 255
 b4e:	7f ef       	ldi	r23, 0xFF	; 255
 b50:	c5 01       	movw	r24, r10
 b52:	0e 94 ef 06 	call	0xdde	; 0xdde <strnlen>
 b56:	4c 01       	movw	r8, r24
 b58:	82 01       	movw	r16, r4
 b5a:	f3 2d       	mov	r31, r3
 b5c:	ff 77       	andi	r31, 0x7F	; 127
 b5e:	3f 2e       	mov	r3, r31
 b60:	16 c0       	rjmp	.+44     	; 0xb8e <vfprintf+0x188>
 b62:	28 01       	movw	r4, r16
 b64:	22 e0       	ldi	r18, 0x02	; 2
 b66:	42 0e       	add	r4, r18
 b68:	51 1c       	adc	r5, r1
 b6a:	f8 01       	movw	r30, r16
 b6c:	a0 80       	ld	r10, Z
 b6e:	b1 80       	ldd	r11, Z+1	; 0x01
 b70:	36 fe       	sbrs	r3, 6
 b72:	03 c0       	rjmp	.+6      	; 0xb7a <vfprintf+0x174>
 b74:	69 2d       	mov	r22, r9
 b76:	70 e0       	ldi	r23, 0x00	; 0
 b78:	02 c0       	rjmp	.+4      	; 0xb7e <vfprintf+0x178>
 b7a:	6f ef       	ldi	r22, 0xFF	; 255
 b7c:	7f ef       	ldi	r23, 0xFF	; 255
 b7e:	c5 01       	movw	r24, r10
 b80:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <strnlen_P>
 b84:	4c 01       	movw	r8, r24
 b86:	f3 2d       	mov	r31, r3
 b88:	f0 68       	ori	r31, 0x80	; 128
 b8a:	3f 2e       	mov	r3, r31
 b8c:	82 01       	movw	r16, r4
 b8e:	33 fc       	sbrc	r3, 3
 b90:	1b c0       	rjmp	.+54     	; 0xbc8 <vfprintf+0x1c2>
 b92:	82 2d       	mov	r24, r2
 b94:	90 e0       	ldi	r25, 0x00	; 0
 b96:	88 16       	cp	r8, r24
 b98:	99 06       	cpc	r9, r25
 b9a:	b0 f4       	brcc	.+44     	; 0xbc8 <vfprintf+0x1c2>
 b9c:	b6 01       	movw	r22, r12
 b9e:	80 e2       	ldi	r24, 0x20	; 32
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 ba6:	2a 94       	dec	r2
 ba8:	f4 cf       	rjmp	.-24     	; 0xb92 <vfprintf+0x18c>
 baa:	f5 01       	movw	r30, r10
 bac:	37 fc       	sbrc	r3, 7
 bae:	85 91       	lpm	r24, Z+
 bb0:	37 fe       	sbrs	r3, 7
 bb2:	81 91       	ld	r24, Z+
 bb4:	5f 01       	movw	r10, r30
 bb6:	b6 01       	movw	r22, r12
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 bbe:	21 10       	cpse	r2, r1
 bc0:	2a 94       	dec	r2
 bc2:	21 e0       	ldi	r18, 0x01	; 1
 bc4:	82 1a       	sub	r8, r18
 bc6:	91 08       	sbc	r9, r1
 bc8:	81 14       	cp	r8, r1
 bca:	91 04       	cpc	r9, r1
 bcc:	71 f7       	brne	.-36     	; 0xbaa <vfprintf+0x1a4>
 bce:	e8 c0       	rjmp	.+464    	; 0xda0 <vfprintf+0x39a>
 bd0:	84 36       	cpi	r24, 0x64	; 100
 bd2:	11 f0       	breq	.+4      	; 0xbd8 <vfprintf+0x1d2>
 bd4:	89 36       	cpi	r24, 0x69	; 105
 bd6:	41 f5       	brne	.+80     	; 0xc28 <vfprintf+0x222>
 bd8:	f8 01       	movw	r30, r16
 bda:	37 fe       	sbrs	r3, 7
 bdc:	07 c0       	rjmp	.+14     	; 0xbec <vfprintf+0x1e6>
 bde:	60 81       	ld	r22, Z
 be0:	71 81       	ldd	r23, Z+1	; 0x01
 be2:	82 81       	ldd	r24, Z+2	; 0x02
 be4:	93 81       	ldd	r25, Z+3	; 0x03
 be6:	0c 5f       	subi	r16, 0xFC	; 252
 be8:	1f 4f       	sbci	r17, 0xFF	; 255
 bea:	08 c0       	rjmp	.+16     	; 0xbfc <vfprintf+0x1f6>
 bec:	60 81       	ld	r22, Z
 bee:	71 81       	ldd	r23, Z+1	; 0x01
 bf0:	07 2e       	mov	r0, r23
 bf2:	00 0c       	add	r0, r0
 bf4:	88 0b       	sbc	r24, r24
 bf6:	99 0b       	sbc	r25, r25
 bf8:	0e 5f       	subi	r16, 0xFE	; 254
 bfa:	1f 4f       	sbci	r17, 0xFF	; 255
 bfc:	f3 2d       	mov	r31, r3
 bfe:	ff 76       	andi	r31, 0x6F	; 111
 c00:	3f 2e       	mov	r3, r31
 c02:	97 ff       	sbrs	r25, 7
 c04:	09 c0       	rjmp	.+18     	; 0xc18 <vfprintf+0x212>
 c06:	90 95       	com	r25
 c08:	80 95       	com	r24
 c0a:	70 95       	com	r23
 c0c:	61 95       	neg	r22
 c0e:	7f 4f       	sbci	r23, 0xFF	; 255
 c10:	8f 4f       	sbci	r24, 0xFF	; 255
 c12:	9f 4f       	sbci	r25, 0xFF	; 255
 c14:	f0 68       	ori	r31, 0x80	; 128
 c16:	3f 2e       	mov	r3, r31
 c18:	2a e0       	ldi	r18, 0x0A	; 10
 c1a:	30 e0       	ldi	r19, 0x00	; 0
 c1c:	a3 01       	movw	r20, r6
 c1e:	0e 94 36 07 	call	0xe6c	; 0xe6c <__ultoa_invert>
 c22:	88 2e       	mov	r8, r24
 c24:	86 18       	sub	r8, r6
 c26:	45 c0       	rjmp	.+138    	; 0xcb2 <vfprintf+0x2ac>
 c28:	85 37       	cpi	r24, 0x75	; 117
 c2a:	31 f4       	brne	.+12     	; 0xc38 <vfprintf+0x232>
 c2c:	23 2d       	mov	r18, r3
 c2e:	2f 7e       	andi	r18, 0xEF	; 239
 c30:	b2 2e       	mov	r11, r18
 c32:	2a e0       	ldi	r18, 0x0A	; 10
 c34:	30 e0       	ldi	r19, 0x00	; 0
 c36:	25 c0       	rjmp	.+74     	; 0xc82 <vfprintf+0x27c>
 c38:	93 2d       	mov	r25, r3
 c3a:	99 7f       	andi	r25, 0xF9	; 249
 c3c:	b9 2e       	mov	r11, r25
 c3e:	8f 36       	cpi	r24, 0x6F	; 111
 c40:	c1 f0       	breq	.+48     	; 0xc72 <vfprintf+0x26c>
 c42:	18 f4       	brcc	.+6      	; 0xc4a <vfprintf+0x244>
 c44:	88 35       	cpi	r24, 0x58	; 88
 c46:	79 f0       	breq	.+30     	; 0xc66 <vfprintf+0x260>
 c48:	b5 c0       	rjmp	.+362    	; 0xdb4 <vfprintf+0x3ae>
 c4a:	80 37       	cpi	r24, 0x70	; 112
 c4c:	19 f0       	breq	.+6      	; 0xc54 <vfprintf+0x24e>
 c4e:	88 37       	cpi	r24, 0x78	; 120
 c50:	21 f0       	breq	.+8      	; 0xc5a <vfprintf+0x254>
 c52:	b0 c0       	rjmp	.+352    	; 0xdb4 <vfprintf+0x3ae>
 c54:	e9 2f       	mov	r30, r25
 c56:	e0 61       	ori	r30, 0x10	; 16
 c58:	be 2e       	mov	r11, r30
 c5a:	b4 fe       	sbrs	r11, 4
 c5c:	0d c0       	rjmp	.+26     	; 0xc78 <vfprintf+0x272>
 c5e:	fb 2d       	mov	r31, r11
 c60:	f4 60       	ori	r31, 0x04	; 4
 c62:	bf 2e       	mov	r11, r31
 c64:	09 c0       	rjmp	.+18     	; 0xc78 <vfprintf+0x272>
 c66:	34 fe       	sbrs	r3, 4
 c68:	0a c0       	rjmp	.+20     	; 0xc7e <vfprintf+0x278>
 c6a:	29 2f       	mov	r18, r25
 c6c:	26 60       	ori	r18, 0x06	; 6
 c6e:	b2 2e       	mov	r11, r18
 c70:	06 c0       	rjmp	.+12     	; 0xc7e <vfprintf+0x278>
 c72:	28 e0       	ldi	r18, 0x08	; 8
 c74:	30 e0       	ldi	r19, 0x00	; 0
 c76:	05 c0       	rjmp	.+10     	; 0xc82 <vfprintf+0x27c>
 c78:	20 e1       	ldi	r18, 0x10	; 16
 c7a:	30 e0       	ldi	r19, 0x00	; 0
 c7c:	02 c0       	rjmp	.+4      	; 0xc82 <vfprintf+0x27c>
 c7e:	20 e1       	ldi	r18, 0x10	; 16
 c80:	32 e0       	ldi	r19, 0x02	; 2
 c82:	f8 01       	movw	r30, r16
 c84:	b7 fe       	sbrs	r11, 7
 c86:	07 c0       	rjmp	.+14     	; 0xc96 <vfprintf+0x290>
 c88:	60 81       	ld	r22, Z
 c8a:	71 81       	ldd	r23, Z+1	; 0x01
 c8c:	82 81       	ldd	r24, Z+2	; 0x02
 c8e:	93 81       	ldd	r25, Z+3	; 0x03
 c90:	0c 5f       	subi	r16, 0xFC	; 252
 c92:	1f 4f       	sbci	r17, 0xFF	; 255
 c94:	06 c0       	rjmp	.+12     	; 0xca2 <vfprintf+0x29c>
 c96:	60 81       	ld	r22, Z
 c98:	71 81       	ldd	r23, Z+1	; 0x01
 c9a:	80 e0       	ldi	r24, 0x00	; 0
 c9c:	90 e0       	ldi	r25, 0x00	; 0
 c9e:	0e 5f       	subi	r16, 0xFE	; 254
 ca0:	1f 4f       	sbci	r17, 0xFF	; 255
 ca2:	a3 01       	movw	r20, r6
 ca4:	0e 94 36 07 	call	0xe6c	; 0xe6c <__ultoa_invert>
 ca8:	88 2e       	mov	r8, r24
 caa:	86 18       	sub	r8, r6
 cac:	fb 2d       	mov	r31, r11
 cae:	ff 77       	andi	r31, 0x7F	; 127
 cb0:	3f 2e       	mov	r3, r31
 cb2:	36 fe       	sbrs	r3, 6
 cb4:	0d c0       	rjmp	.+26     	; 0xcd0 <vfprintf+0x2ca>
 cb6:	23 2d       	mov	r18, r3
 cb8:	2e 7f       	andi	r18, 0xFE	; 254
 cba:	a2 2e       	mov	r10, r18
 cbc:	89 14       	cp	r8, r9
 cbe:	58 f4       	brcc	.+22     	; 0xcd6 <vfprintf+0x2d0>
 cc0:	34 fe       	sbrs	r3, 4
 cc2:	0b c0       	rjmp	.+22     	; 0xcda <vfprintf+0x2d4>
 cc4:	32 fc       	sbrc	r3, 2
 cc6:	09 c0       	rjmp	.+18     	; 0xcda <vfprintf+0x2d4>
 cc8:	83 2d       	mov	r24, r3
 cca:	8e 7e       	andi	r24, 0xEE	; 238
 ccc:	a8 2e       	mov	r10, r24
 cce:	05 c0       	rjmp	.+10     	; 0xcda <vfprintf+0x2d4>
 cd0:	b8 2c       	mov	r11, r8
 cd2:	a3 2c       	mov	r10, r3
 cd4:	03 c0       	rjmp	.+6      	; 0xcdc <vfprintf+0x2d6>
 cd6:	b8 2c       	mov	r11, r8
 cd8:	01 c0       	rjmp	.+2      	; 0xcdc <vfprintf+0x2d6>
 cda:	b9 2c       	mov	r11, r9
 cdc:	a4 fe       	sbrs	r10, 4
 cde:	0f c0       	rjmp	.+30     	; 0xcfe <vfprintf+0x2f8>
 ce0:	fe 01       	movw	r30, r28
 ce2:	e8 0d       	add	r30, r8
 ce4:	f1 1d       	adc	r31, r1
 ce6:	80 81       	ld	r24, Z
 ce8:	80 33       	cpi	r24, 0x30	; 48
 cea:	21 f4       	brne	.+8      	; 0xcf4 <vfprintf+0x2ee>
 cec:	9a 2d       	mov	r25, r10
 cee:	99 7e       	andi	r25, 0xE9	; 233
 cf0:	a9 2e       	mov	r10, r25
 cf2:	09 c0       	rjmp	.+18     	; 0xd06 <vfprintf+0x300>
 cf4:	a2 fe       	sbrs	r10, 2
 cf6:	06 c0       	rjmp	.+12     	; 0xd04 <vfprintf+0x2fe>
 cf8:	b3 94       	inc	r11
 cfa:	b3 94       	inc	r11
 cfc:	04 c0       	rjmp	.+8      	; 0xd06 <vfprintf+0x300>
 cfe:	8a 2d       	mov	r24, r10
 d00:	86 78       	andi	r24, 0x86	; 134
 d02:	09 f0       	breq	.+2      	; 0xd06 <vfprintf+0x300>
 d04:	b3 94       	inc	r11
 d06:	a3 fc       	sbrc	r10, 3
 d08:	11 c0       	rjmp	.+34     	; 0xd2c <vfprintf+0x326>
 d0a:	a0 fe       	sbrs	r10, 0
 d0c:	06 c0       	rjmp	.+12     	; 0xd1a <vfprintf+0x314>
 d0e:	b2 14       	cp	r11, r2
 d10:	88 f4       	brcc	.+34     	; 0xd34 <vfprintf+0x32e>
 d12:	28 0c       	add	r2, r8
 d14:	92 2c       	mov	r9, r2
 d16:	9b 18       	sub	r9, r11
 d18:	0e c0       	rjmp	.+28     	; 0xd36 <vfprintf+0x330>
 d1a:	b2 14       	cp	r11, r2
 d1c:	60 f4       	brcc	.+24     	; 0xd36 <vfprintf+0x330>
 d1e:	b6 01       	movw	r22, r12
 d20:	80 e2       	ldi	r24, 0x20	; 32
 d22:	90 e0       	ldi	r25, 0x00	; 0
 d24:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 d28:	b3 94       	inc	r11
 d2a:	f7 cf       	rjmp	.-18     	; 0xd1a <vfprintf+0x314>
 d2c:	b2 14       	cp	r11, r2
 d2e:	18 f4       	brcc	.+6      	; 0xd36 <vfprintf+0x330>
 d30:	2b 18       	sub	r2, r11
 d32:	02 c0       	rjmp	.+4      	; 0xd38 <vfprintf+0x332>
 d34:	98 2c       	mov	r9, r8
 d36:	21 2c       	mov	r2, r1
 d38:	a4 fe       	sbrs	r10, 4
 d3a:	10 c0       	rjmp	.+32     	; 0xd5c <vfprintf+0x356>
 d3c:	b6 01       	movw	r22, r12
 d3e:	80 e3       	ldi	r24, 0x30	; 48
 d40:	90 e0       	ldi	r25, 0x00	; 0
 d42:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 d46:	a2 fe       	sbrs	r10, 2
 d48:	17 c0       	rjmp	.+46     	; 0xd78 <vfprintf+0x372>
 d4a:	a1 fc       	sbrc	r10, 1
 d4c:	03 c0       	rjmp	.+6      	; 0xd54 <vfprintf+0x34e>
 d4e:	88 e7       	ldi	r24, 0x78	; 120
 d50:	90 e0       	ldi	r25, 0x00	; 0
 d52:	02 c0       	rjmp	.+4      	; 0xd58 <vfprintf+0x352>
 d54:	88 e5       	ldi	r24, 0x58	; 88
 d56:	90 e0       	ldi	r25, 0x00	; 0
 d58:	b6 01       	movw	r22, r12
 d5a:	0c c0       	rjmp	.+24     	; 0xd74 <vfprintf+0x36e>
 d5c:	8a 2d       	mov	r24, r10
 d5e:	86 78       	andi	r24, 0x86	; 134
 d60:	59 f0       	breq	.+22     	; 0xd78 <vfprintf+0x372>
 d62:	a1 fe       	sbrs	r10, 1
 d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x364>
 d66:	8b e2       	ldi	r24, 0x2B	; 43
 d68:	01 c0       	rjmp	.+2      	; 0xd6c <vfprintf+0x366>
 d6a:	80 e2       	ldi	r24, 0x20	; 32
 d6c:	a7 fc       	sbrc	r10, 7
 d6e:	8d e2       	ldi	r24, 0x2D	; 45
 d70:	b6 01       	movw	r22, r12
 d72:	90 e0       	ldi	r25, 0x00	; 0
 d74:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 d78:	89 14       	cp	r8, r9
 d7a:	38 f4       	brcc	.+14     	; 0xd8a <vfprintf+0x384>
 d7c:	b6 01       	movw	r22, r12
 d7e:	80 e3       	ldi	r24, 0x30	; 48
 d80:	90 e0       	ldi	r25, 0x00	; 0
 d82:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 d86:	9a 94       	dec	r9
 d88:	f7 cf       	rjmp	.-18     	; 0xd78 <vfprintf+0x372>
 d8a:	8a 94       	dec	r8
 d8c:	f3 01       	movw	r30, r6
 d8e:	e8 0d       	add	r30, r8
 d90:	f1 1d       	adc	r31, r1
 d92:	80 81       	ld	r24, Z
 d94:	b6 01       	movw	r22, r12
 d96:	90 e0       	ldi	r25, 0x00	; 0
 d98:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 d9c:	81 10       	cpse	r8, r1
 d9e:	f5 cf       	rjmp	.-22     	; 0xd8a <vfprintf+0x384>
 da0:	22 20       	and	r2, r2
 da2:	09 f4       	brne	.+2      	; 0xda6 <vfprintf+0x3a0>
 da4:	42 ce       	rjmp	.-892    	; 0xa2a <vfprintf+0x24>
 da6:	b6 01       	movw	r22, r12
 da8:	80 e2       	ldi	r24, 0x20	; 32
 daa:	90 e0       	ldi	r25, 0x00	; 0
 dac:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <fputc>
 db0:	2a 94       	dec	r2
 db2:	f6 cf       	rjmp	.-20     	; 0xda0 <vfprintf+0x39a>
 db4:	f6 01       	movw	r30, r12
 db6:	86 81       	ldd	r24, Z+6	; 0x06
 db8:	97 81       	ldd	r25, Z+7	; 0x07
 dba:	02 c0       	rjmp	.+4      	; 0xdc0 <vfprintf+0x3ba>
 dbc:	8f ef       	ldi	r24, 0xFF	; 255
 dbe:	9f ef       	ldi	r25, 0xFF	; 255
 dc0:	2b 96       	adiw	r28, 0x0b	; 11
 dc2:	e2 e1       	ldi	r30, 0x12	; 18
 dc4:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__epilogue_restores__>

00000dc8 <strnlen_P>:
 dc8:	fc 01       	movw	r30, r24
 dca:	05 90       	lpm	r0, Z+
 dcc:	61 50       	subi	r22, 0x01	; 1
 dce:	70 40       	sbci	r23, 0x00	; 0
 dd0:	01 10       	cpse	r0, r1
 dd2:	d8 f7       	brcc	.-10     	; 0xdca <strnlen_P+0x2>
 dd4:	80 95       	com	r24
 dd6:	90 95       	com	r25
 dd8:	8e 0f       	add	r24, r30
 dda:	9f 1f       	adc	r25, r31
 ddc:	08 95       	ret

00000dde <strnlen>:
 dde:	fc 01       	movw	r30, r24
 de0:	61 50       	subi	r22, 0x01	; 1
 de2:	70 40       	sbci	r23, 0x00	; 0
 de4:	01 90       	ld	r0, Z+
 de6:	01 10       	cpse	r0, r1
 de8:	d8 f7       	brcc	.-10     	; 0xde0 <strnlen+0x2>
 dea:	80 95       	com	r24
 dec:	90 95       	com	r25
 dee:	8e 0f       	add	r24, r30
 df0:	9f 1f       	adc	r25, r31
 df2:	08 95       	ret

00000df4 <fputc>:
 df4:	0f 93       	push	r16
 df6:	1f 93       	push	r17
 df8:	cf 93       	push	r28
 dfa:	df 93       	push	r29
 dfc:	fb 01       	movw	r30, r22
 dfe:	23 81       	ldd	r18, Z+3	; 0x03
 e00:	21 fd       	sbrc	r18, 1
 e02:	03 c0       	rjmp	.+6      	; 0xe0a <fputc+0x16>
 e04:	8f ef       	ldi	r24, 0xFF	; 255
 e06:	9f ef       	ldi	r25, 0xFF	; 255
 e08:	2c c0       	rjmp	.+88     	; 0xe62 <fputc+0x6e>
 e0a:	22 ff       	sbrs	r18, 2
 e0c:	16 c0       	rjmp	.+44     	; 0xe3a <fputc+0x46>
 e0e:	46 81       	ldd	r20, Z+6	; 0x06
 e10:	57 81       	ldd	r21, Z+7	; 0x07
 e12:	24 81       	ldd	r18, Z+4	; 0x04
 e14:	35 81       	ldd	r19, Z+5	; 0x05
 e16:	42 17       	cp	r20, r18
 e18:	53 07       	cpc	r21, r19
 e1a:	44 f4       	brge	.+16     	; 0xe2c <fputc+0x38>
 e1c:	a0 81       	ld	r26, Z
 e1e:	b1 81       	ldd	r27, Z+1	; 0x01
 e20:	9d 01       	movw	r18, r26
 e22:	2f 5f       	subi	r18, 0xFF	; 255
 e24:	3f 4f       	sbci	r19, 0xFF	; 255
 e26:	31 83       	std	Z+1, r19	; 0x01
 e28:	20 83       	st	Z, r18
 e2a:	8c 93       	st	X, r24
 e2c:	26 81       	ldd	r18, Z+6	; 0x06
 e2e:	37 81       	ldd	r19, Z+7	; 0x07
 e30:	2f 5f       	subi	r18, 0xFF	; 255
 e32:	3f 4f       	sbci	r19, 0xFF	; 255
 e34:	37 83       	std	Z+7, r19	; 0x07
 e36:	26 83       	std	Z+6, r18	; 0x06
 e38:	14 c0       	rjmp	.+40     	; 0xe62 <fputc+0x6e>
 e3a:	8b 01       	movw	r16, r22
 e3c:	ec 01       	movw	r28, r24
 e3e:	fb 01       	movw	r30, r22
 e40:	00 84       	ldd	r0, Z+8	; 0x08
 e42:	f1 85       	ldd	r31, Z+9	; 0x09
 e44:	e0 2d       	mov	r30, r0
 e46:	09 95       	icall
 e48:	89 2b       	or	r24, r25
 e4a:	e1 f6       	brne	.-72     	; 0xe04 <fputc+0x10>
 e4c:	d8 01       	movw	r26, r16
 e4e:	16 96       	adiw	r26, 0x06	; 6
 e50:	8d 91       	ld	r24, X+
 e52:	9c 91       	ld	r25, X
 e54:	17 97       	sbiw	r26, 0x07	; 7
 e56:	01 96       	adiw	r24, 0x01	; 1
 e58:	17 96       	adiw	r26, 0x07	; 7
 e5a:	9c 93       	st	X, r25
 e5c:	8e 93       	st	-X, r24
 e5e:	16 97       	sbiw	r26, 0x06	; 6
 e60:	ce 01       	movw	r24, r28
 e62:	df 91       	pop	r29
 e64:	cf 91       	pop	r28
 e66:	1f 91       	pop	r17
 e68:	0f 91       	pop	r16
 e6a:	08 95       	ret

00000e6c <__ultoa_invert>:
 e6c:	fa 01       	movw	r30, r20
 e6e:	aa 27       	eor	r26, r26
 e70:	28 30       	cpi	r18, 0x08	; 8
 e72:	51 f1       	breq	.+84     	; 0xec8 <__ultoa_invert+0x5c>
 e74:	20 31       	cpi	r18, 0x10	; 16
 e76:	81 f1       	breq	.+96     	; 0xed8 <__ultoa_invert+0x6c>
 e78:	e8 94       	clt
 e7a:	6f 93       	push	r22
 e7c:	6e 7f       	andi	r22, 0xFE	; 254
 e7e:	6e 5f       	subi	r22, 0xFE	; 254
 e80:	7f 4f       	sbci	r23, 0xFF	; 255
 e82:	8f 4f       	sbci	r24, 0xFF	; 255
 e84:	9f 4f       	sbci	r25, 0xFF	; 255
 e86:	af 4f       	sbci	r26, 0xFF	; 255
 e88:	b1 e0       	ldi	r27, 0x01	; 1
 e8a:	3e d0       	rcall	.+124    	; 0xf08 <__ultoa_invert+0x9c>
 e8c:	b4 e0       	ldi	r27, 0x04	; 4
 e8e:	3c d0       	rcall	.+120    	; 0xf08 <__ultoa_invert+0x9c>
 e90:	67 0f       	add	r22, r23
 e92:	78 1f       	adc	r23, r24
 e94:	89 1f       	adc	r24, r25
 e96:	9a 1f       	adc	r25, r26
 e98:	a1 1d       	adc	r26, r1
 e9a:	68 0f       	add	r22, r24
 e9c:	79 1f       	adc	r23, r25
 e9e:	8a 1f       	adc	r24, r26
 ea0:	91 1d       	adc	r25, r1
 ea2:	a1 1d       	adc	r26, r1
 ea4:	6a 0f       	add	r22, r26
 ea6:	71 1d       	adc	r23, r1
 ea8:	81 1d       	adc	r24, r1
 eaa:	91 1d       	adc	r25, r1
 eac:	a1 1d       	adc	r26, r1
 eae:	20 d0       	rcall	.+64     	; 0xef0 <__ultoa_invert+0x84>
 eb0:	09 f4       	brne	.+2      	; 0xeb4 <__ultoa_invert+0x48>
 eb2:	68 94       	set
 eb4:	3f 91       	pop	r19
 eb6:	2a e0       	ldi	r18, 0x0A	; 10
 eb8:	26 9f       	mul	r18, r22
 eba:	11 24       	eor	r1, r1
 ebc:	30 19       	sub	r19, r0
 ebe:	30 5d       	subi	r19, 0xD0	; 208
 ec0:	31 93       	st	Z+, r19
 ec2:	de f6       	brtc	.-74     	; 0xe7a <__ultoa_invert+0xe>
 ec4:	cf 01       	movw	r24, r30
 ec6:	08 95       	ret
 ec8:	46 2f       	mov	r20, r22
 eca:	47 70       	andi	r20, 0x07	; 7
 ecc:	40 5d       	subi	r20, 0xD0	; 208
 ece:	41 93       	st	Z+, r20
 ed0:	b3 e0       	ldi	r27, 0x03	; 3
 ed2:	0f d0       	rcall	.+30     	; 0xef2 <__ultoa_invert+0x86>
 ed4:	c9 f7       	brne	.-14     	; 0xec8 <__ultoa_invert+0x5c>
 ed6:	f6 cf       	rjmp	.-20     	; 0xec4 <__ultoa_invert+0x58>
 ed8:	46 2f       	mov	r20, r22
 eda:	4f 70       	andi	r20, 0x0F	; 15
 edc:	40 5d       	subi	r20, 0xD0	; 208
 ede:	4a 33       	cpi	r20, 0x3A	; 58
 ee0:	18 f0       	brcs	.+6      	; 0xee8 <__ultoa_invert+0x7c>
 ee2:	49 5d       	subi	r20, 0xD9	; 217
 ee4:	31 fd       	sbrc	r19, 1
 ee6:	40 52       	subi	r20, 0x20	; 32
 ee8:	41 93       	st	Z+, r20
 eea:	02 d0       	rcall	.+4      	; 0xef0 <__ultoa_invert+0x84>
 eec:	a9 f7       	brne	.-22     	; 0xed8 <__ultoa_invert+0x6c>
 eee:	ea cf       	rjmp	.-44     	; 0xec4 <__ultoa_invert+0x58>
 ef0:	b4 e0       	ldi	r27, 0x04	; 4
 ef2:	a6 95       	lsr	r26
 ef4:	97 95       	ror	r25
 ef6:	87 95       	ror	r24
 ef8:	77 95       	ror	r23
 efa:	67 95       	ror	r22
 efc:	ba 95       	dec	r27
 efe:	c9 f7       	brne	.-14     	; 0xef2 <__ultoa_invert+0x86>
 f00:	00 97       	sbiw	r24, 0x00	; 0
 f02:	61 05       	cpc	r22, r1
 f04:	71 05       	cpc	r23, r1
 f06:	08 95       	ret
 f08:	9b 01       	movw	r18, r22
 f0a:	ac 01       	movw	r20, r24
 f0c:	0a 2e       	mov	r0, r26
 f0e:	06 94       	lsr	r0
 f10:	57 95       	ror	r21
 f12:	47 95       	ror	r20
 f14:	37 95       	ror	r19
 f16:	27 95       	ror	r18
 f18:	ba 95       	dec	r27
 f1a:	c9 f7       	brne	.-14     	; 0xf0e <__ultoa_invert+0xa2>
 f1c:	62 0f       	add	r22, r18
 f1e:	73 1f       	adc	r23, r19
 f20:	84 1f       	adc	r24, r20
 f22:	95 1f       	adc	r25, r21
 f24:	a0 1d       	adc	r26, r0
 f26:	08 95       	ret

00000f28 <__prologue_saves__>:
 f28:	2f 92       	push	r2
 f2a:	3f 92       	push	r3
 f2c:	4f 92       	push	r4
 f2e:	5f 92       	push	r5
 f30:	6f 92       	push	r6
 f32:	7f 92       	push	r7
 f34:	8f 92       	push	r8
 f36:	9f 92       	push	r9
 f38:	af 92       	push	r10
 f3a:	bf 92       	push	r11
 f3c:	cf 92       	push	r12
 f3e:	df 92       	push	r13
 f40:	ef 92       	push	r14
 f42:	ff 92       	push	r15
 f44:	0f 93       	push	r16
 f46:	1f 93       	push	r17
 f48:	cf 93       	push	r28
 f4a:	df 93       	push	r29
 f4c:	cd b7       	in	r28, 0x3d	; 61
 f4e:	de b7       	in	r29, 0x3e	; 62
 f50:	ca 1b       	sub	r28, r26
 f52:	db 0b       	sbc	r29, r27
 f54:	0f b6       	in	r0, 0x3f	; 63
 f56:	f8 94       	cli
 f58:	de bf       	out	0x3e, r29	; 62
 f5a:	0f be       	out	0x3f, r0	; 63
 f5c:	cd bf       	out	0x3d, r28	; 61
 f5e:	09 94       	ijmp

00000f60 <__epilogue_restores__>:
 f60:	2a 88       	ldd	r2, Y+18	; 0x12
 f62:	39 88       	ldd	r3, Y+17	; 0x11
 f64:	48 88       	ldd	r4, Y+16	; 0x10
 f66:	5f 84       	ldd	r5, Y+15	; 0x0f
 f68:	6e 84       	ldd	r6, Y+14	; 0x0e
 f6a:	7d 84       	ldd	r7, Y+13	; 0x0d
 f6c:	8c 84       	ldd	r8, Y+12	; 0x0c
 f6e:	9b 84       	ldd	r9, Y+11	; 0x0b
 f70:	aa 84       	ldd	r10, Y+10	; 0x0a
 f72:	b9 84       	ldd	r11, Y+9	; 0x09
 f74:	c8 84       	ldd	r12, Y+8	; 0x08
 f76:	df 80       	ldd	r13, Y+7	; 0x07
 f78:	ee 80       	ldd	r14, Y+6	; 0x06
 f7a:	fd 80       	ldd	r15, Y+5	; 0x05
 f7c:	0c 81       	ldd	r16, Y+4	; 0x04
 f7e:	1b 81       	ldd	r17, Y+3	; 0x03
 f80:	aa 81       	ldd	r26, Y+2	; 0x02
 f82:	b9 81       	ldd	r27, Y+1	; 0x01
 f84:	ce 0f       	add	r28, r30
 f86:	d1 1d       	adc	r29, r1
 f88:	0f b6       	in	r0, 0x3f	; 63
 f8a:	f8 94       	cli
 f8c:	de bf       	out	0x3e, r29	; 62
 f8e:	0f be       	out	0x3f, r0	; 63
 f90:	cd bf       	out	0x3d, r28	; 61
 f92:	ed 01       	movw	r28, r26
 f94:	08 95       	ret

00000f96 <_exit>:
 f96:	f8 94       	cli

00000f98 <__stop_program>:
 f98:	ff cf       	rjmp	.-2      	; 0xf98 <__stop_program>
